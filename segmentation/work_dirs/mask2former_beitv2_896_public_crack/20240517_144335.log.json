{"env_info": "sys.platform: linux\nPython: 3.9.19 (main, May  6 2024, 19:43:03) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA RTX A5000\nCUDA_HOME: /usr/local/cuda\nNVCC: Build cuda_11.8.r11.8/compiler.31833905_0\nGCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nPyTorch: 1.9.0+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.10.0+cu111\nOpenCV: 4.9.0\nMMCV: 1.4.2\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.1\nMMSegmentation: 0.20.2+e75f8cd", "seed": 144658334, "exp_name": "mask2former_beitv2_896_public_crack.py", "mmseg_version": "0.20.2+e75f8cd", "config": "num_things_classes = 0\nnum_stuff_classes = 2\nnum_classes = 2\nnorm_cfg = dict(type='BN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoderMask2Former',\n    pretrained='pretrained/beitv2_large_patch16_224_pt1k_ft21k.pth',\n    backbone=dict(\n        type='BEiTAdapter',\n        patch_size=16,\n        embed_dim=1024,\n        depth=24,\n        num_heads=16,\n        mlp_ratio=4,\n        qkv_bias=True,\n        use_abs_pos_emb=False,\n        use_rel_pos_bias=True,\n        img_size=896,\n        init_values=1e-06,\n        drop_path_rate=0.3,\n        conv_inplane=64,\n        n_points=4,\n        deform_num_heads=16,\n        cffn_ratio=0.25,\n        deform_ratio=0.5,\n        with_cp=True,\n        interaction_indexes=[[0, 5], [6, 11], [12, 17], [18, 23]],\n        pretrained='pretrained/beitv2_large_patch16_224_pt1k_ft21k.pth'),\n    decode_head=dict(\n        type='Mask2FormerHead',\n        in_channels=[1024, 1024, 1024, 1024],\n        feat_channels=1024,\n        out_channels=1024,\n        in_index=[0, 1, 2, 3],\n        num_things_classes=0,\n        num_stuff_classes=2,\n        num_queries=200,\n        num_transformer_feat_level=3,\n        pixel_decoder=dict(\n            type='MSDeformAttnPixelDecoder',\n            num_outs=3,\n            norm_cfg=dict(type='GN', num_groups=32),\n            act_cfg=dict(type='ReLU'),\n            encoder=dict(\n                type='DetrTransformerEncoder',\n                num_layers=6,\n                transformerlayers=dict(\n                    type='BaseTransformerLayer',\n                    attn_cfgs=dict(\n                        type='MultiScaleDeformableAttention',\n                        embed_dims=1024,\n                        num_heads=32,\n                        num_levels=3,\n                        num_points=4,\n                        im2col_step=64,\n                        dropout=0.0,\n                        batch_first=False,\n                        norm_cfg=None,\n                        init_cfg=None),\n                    ffn_cfgs=dict(\n                        type='FFN',\n                        embed_dims=1024,\n                        feedforward_channels=4096,\n                        num_fcs=2,\n                        ffn_drop=0.0,\n                        act_cfg=dict(type='ReLU', inplace=True),\n                        with_cp=True),\n                    operation_order=('self_attn', 'norm', 'ffn', 'norm')),\n                init_cfg=None),\n            positional_encoding=dict(\n                type='SinePositionalEncoding', num_feats=512, normalize=True),\n            init_cfg=None),\n        enforce_decoder_input_project=False,\n        positional_encoding=dict(\n            type='SinePositionalEncoding', num_feats=512, normalize=True),\n        transformer_decoder=dict(\n            type='DetrTransformerDecoder',\n            return_intermediate=True,\n            num_layers=9,\n            transformerlayers=dict(\n                type='DetrTransformerDecoderLayer',\n                attn_cfgs=dict(\n                    type='MultiheadAttention',\n                    embed_dims=1024,\n                    num_heads=32,\n                    attn_drop=0.0,\n                    proj_drop=0.0,\n                    dropout_layer=None,\n                    batch_first=False),\n                ffn_cfgs=dict(\n                    embed_dims=1024,\n                    feedforward_channels=4096,\n                    num_fcs=2,\n                    act_cfg=dict(type='ReLU', inplace=True),\n                    ffn_drop=0.0,\n                    dropout_layer=None,\n                    add_identity=True,\n                    with_cp=True),\n                feedforward_channels=4096,\n                operation_order=('cross_attn', 'norm', 'self_attn', 'norm',\n                                 'ffn', 'norm')),\n            init_cfg=None),\n        loss_cls=dict(\n            type='CrossEntropyLoss',\n            use_sigmoid=False,\n            loss_weight=2.0,\n            reduction='mean',\n            class_weight=[1, 1, 0.1]),\n        loss_mask=dict(\n            type='CrossEntropyLoss',\n            use_sigmoid=True,\n            reduction='mean',\n            loss_weight=5.0),\n        loss_dice=dict(\n            type='DiceLoss',\n            use_sigmoid=True,\n            activate=True,\n            reduction='mean',\n            naive_dice=True,\n            eps=1.0,\n            loss_weight=5.0),\n        train_cfg=dict(\n            num_points=12544,\n            oversample_ratio=3.0,\n            importance_sample_ratio=0.75,\n            assigner=dict(\n                type='MaskHungarianAssigner',\n                cls_cost=dict(type='ClassificationCost', weight=2.0),\n                mask_cost=dict(\n                    type='CrossEntropyLossCost', weight=5.0, use_sigmoid=True),\n                dice_cost=dict(\n                    type='DiceCost', weight=5.0, pred_act=True, eps=1.0)),\n            sampler=dict(type='MaskPseudoSampler')),\n        test_cfg=dict(\n            panoptic_on=True,\n            semantic_on=False,\n            instance_on=True,\n            max_per_image=100,\n            iou_thr=0.8,\n            filter_low_score=True,\n            mode='slide',\n            crop_size=(896, 896),\n            stride=(512, 512))),\n    train_cfg=dict(\n        num_points=12544,\n        oversample_ratio=3.0,\n        importance_sample_ratio=0.75,\n        assigner=dict(\n            type='MaskHungarianAssigner',\n            cls_cost=dict(type='ClassificationCost', weight=2.0),\n            mask_cost=dict(\n                type='CrossEntropyLossCost', weight=5.0, use_sigmoid=True),\n            dice_cost=dict(\n                type='DiceCost', weight=5.0, pred_act=True, eps=1.0)),\n        sampler=dict(type='MaskPseudoSampler')),\n    test_cfg=dict(\n        panoptic_on=True,\n        semantic_on=False,\n        instance_on=True,\n        max_per_image=100,\n        iou_thr=0.8,\n        filter_low_score=True,\n        mode='slide',\n        crop_size=(896, 896),\n        stride=(512, 512)),\n    init_cfg=None)\ndataset_type = 'CustomDataset'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (896, 896)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(3584, 896), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(896, 896)),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(896, 896), pad_val=0, seg_pad_val=255),\n    dict(type='ToMask'),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=['img', 'gt_semantic_seg', 'gt_masks', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(3584, 1792),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=1,\n    workers_per_gpu=1,\n    train=dict(\n        type='CustomDataset',\n        data_root='data/Public_all',\n        img_dir='images/training',\n        ann_dir='annotations/training',\n        img_suffix='.jpg',\n        seg_map_suffix='.png',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations'),\n            dict(type='Resize', img_scale=(3584, 896), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(896, 896)),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size=(896, 896), pad_val=0, seg_pad_val=255),\n            dict(type='ToMask'),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=['img', 'gt_semantic_seg', 'gt_masks', 'gt_labels'])\n        ],\n        classes=['background', 'crack']),\n    val=dict(\n        type='CustomDataset',\n        data_root='data/Public_all',\n        img_dir='images/val2',\n        ann_dir='annotations/val2',\n        img_suffix='.jpg',\n        seg_map_suffix='.png',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1408),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=['background', 'crack']),\n    test=dict(\n        type='CustomDataset',\n        data_root='data/Public_all',\n        img_dir='images/test2',\n        ann_dir='annotations/test2',\n        img_suffix='.jpg',\n        seg_map_suffix='.png',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(3584, 1792),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=['background', 'crack']))\nlog_config = dict(\n    interval=64, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'pretrained/mask2former_beitv2_adapter_large_896_80k_ade20k.pth'\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(\n    type='AdamW',\n    lr=2e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    constructor='LayerDecayOptimizerConstructor',\n    paramwise_cfg=dict(num_layers=24, layer_decay_rate=0.9))\noptimizer_config = dict(\n    type='GradientCumulativeOptimizerHook', cumulative_iters=32)\nlr_config = dict(\n    policy='poly',\n    warmup='linear',\n    warmup_iters=4000,\n    warmup_ratio=1e-06,\n    power=1.0,\n    min_lr=0.0,\n    by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=4000)\ncheckpoint_config = dict(by_epoch=False, interval=4000, max_keep_ckpts=1)\nevaluation = dict(\n    interval=4000, metric='mIoU', pre_eval=True, save_best='mIoU')\npretrained = 'pretrained/beitv2_large_patch16_224_pt1k_ft21k.pth'\nwork_dir = './work_dirs/mask2former_beitv2_896_public_crack'\ngpu_ids = range(0, 1)\nauto_resume = False\ndevice = 'cuda'\nseed = 144658334\n", "CLASSES": ["background", "crack"], "PALETTE": [[222, 66, 152], [42, 207, 226]], "hook_msgs": {}}
{"mode": "train", "epoch": 1, "iter": 64, "lr": 0.0, "memory": 21304, "data_time": 0.00393, "decode.loss_cls": 1.03568, "decode.loss_mask": 0.57305, "decode.loss_dice": 1.36178, "decode.d0.loss_cls": 1.86204, "decode.d0.loss_mask": 0.65908, "decode.d0.loss_dice": 1.55982, "decode.d1.loss_cls": 1.06474, "decode.d1.loss_mask": 0.61281, "decode.d1.loss_dice": 1.43024, "decode.d2.loss_cls": 1.01467, "decode.d2.loss_mask": 0.61908, "decode.d2.loss_dice": 1.38135, "decode.d3.loss_cls": 0.94205, "decode.d3.loss_mask": 0.54006, "decode.d3.loss_dice": 1.35902, "decode.d4.loss_cls": 0.93555, "decode.d4.loss_mask": 0.5742, "decode.d4.loss_dice": 1.36555, "decode.d5.loss_cls": 1.0145, "decode.d5.loss_mask": 0.55582, "decode.d5.loss_dice": 1.33191, "decode.d6.loss_cls": 1.26087, "decode.d6.loss_mask": 0.5343, "decode.d6.loss_dice": 1.35893, "decode.d7.loss_cls": 1.12777, "decode.d7.loss_mask": 0.588, "decode.d7.loss_dice": 1.34283, "decode.d8.loss_cls": 1.13298, "decode.d8.loss_mask": 0.60198, "decode.d8.loss_dice": 1.33694, "loss": 31.07757, "time": 2.74244}
{"mode": "train", "epoch": 1, "iter": 128, "lr": 0.0, "memory": 21304, "data_time": 0.00327, "decode.loss_cls": 0.99242, "decode.loss_mask": 0.68433, "decode.loss_dice": 1.6119, "decode.d0.loss_cls": 1.87616, "decode.d0.loss_mask": 0.80298, "decode.d0.loss_dice": 1.80846, "decode.d1.loss_cls": 1.02939, "decode.d1.loss_mask": 0.73079, "decode.d1.loss_dice": 1.70006, "decode.d2.loss_cls": 0.99669, "decode.d2.loss_mask": 0.69337, "decode.d2.loss_dice": 1.62843, "decode.d3.loss_cls": 0.92533, "decode.d3.loss_mask": 0.62377, "decode.d3.loss_dice": 1.63122, "decode.d4.loss_cls": 0.96225, "decode.d4.loss_mask": 0.69206, "decode.d4.loss_dice": 1.60437, "decode.d5.loss_cls": 0.9973, "decode.d5.loss_mask": 0.68111, "decode.d5.loss_dice": 1.55579, "decode.d6.loss_cls": 1.22906, "decode.d6.loss_mask": 0.64171, "decode.d6.loss_dice": 1.5624, "decode.d7.loss_cls": 1.06442, "decode.d7.loss_mask": 0.67873, "decode.d7.loss_dice": 1.58655, "decode.d8.loss_cls": 1.06526, "decode.d8.loss_mask": 0.72915, "decode.d8.loss_dice": 1.59765, "loss": 34.3831, "time": 2.79226}
{"mode": "train", "epoch": 1, "iter": 192, "lr": 0.0, "memory": 21304, "data_time": 0.00319, "decode.loss_cls": 0.90086, "decode.loss_mask": 0.71521, "decode.loss_dice": 1.39605, "decode.d0.loss_cls": 1.86938, "decode.d0.loss_mask": 0.82343, "decode.d0.loss_dice": 1.64824, "decode.d1.loss_cls": 1.01824, "decode.d1.loss_mask": 0.72409, "decode.d1.loss_dice": 1.43079, "decode.d2.loss_cls": 0.92463, "decode.d2.loss_mask": 0.74413, "decode.d2.loss_dice": 1.38935, "decode.d3.loss_cls": 0.86045, "decode.d3.loss_mask": 0.71995, "decode.d3.loss_dice": 1.39116, "decode.d4.loss_cls": 0.87632, "decode.d4.loss_mask": 0.74485, "decode.d4.loss_dice": 1.40844, "decode.d5.loss_cls": 0.92584, "decode.d5.loss_mask": 0.73604, "decode.d5.loss_dice": 1.37721, "decode.d6.loss_cls": 1.09785, "decode.d6.loss_mask": 0.79357, "decode.d6.loss_dice": 1.41347, "decode.d7.loss_cls": 0.97924, "decode.d7.loss_mask": 0.7728, "decode.d7.loss_dice": 1.39735, "decode.d8.loss_cls": 1.00804, "decode.d8.loss_mask": 0.78864, "decode.d8.loss_dice": 1.39565, "loss": 32.27128, "time": 2.75816}
{"mode": "train", "epoch": 1, "iter": 256, "lr": 0.0, "memory": 21304, "data_time": 0.00313, "decode.loss_cls": 0.76118, "decode.loss_mask": 0.60631, "decode.loss_dice": 1.19726, "decode.d0.loss_cls": 1.87032, "decode.d0.loss_mask": 0.72589, "decode.d0.loss_dice": 1.42413, "decode.d1.loss_cls": 0.89791, "decode.d1.loss_mask": 0.67654, "decode.d1.loss_dice": 1.30575, "decode.d2.loss_cls": 0.81873, "decode.d2.loss_mask": 0.70938, "decode.d2.loss_dice": 1.25225, "decode.d3.loss_cls": 0.77128, "decode.d3.loss_mask": 0.6471, "decode.d3.loss_dice": 1.22191, "decode.d4.loss_cls": 0.76287, "decode.d4.loss_mask": 0.62201, "decode.d4.loss_dice": 1.20871, "decode.d5.loss_cls": 0.79973, "decode.d5.loss_mask": 0.61959, "decode.d5.loss_dice": 1.20418, "decode.d6.loss_cls": 0.93776, "decode.d6.loss_mask": 0.61123, "decode.d6.loss_dice": 1.20419, "decode.d7.loss_cls": 0.83847, "decode.d7.loss_mask": 0.6361, "decode.d7.loss_dice": 1.21681, "decode.d8.loss_cls": 0.83789, "decode.d8.loss_mask": 0.60026, "decode.d8.loss_dice": 1.19724, "loss": 28.18301, "time": 2.73308}
{"mode": "train", "epoch": 1, "iter": 320, "lr": 0.0, "memory": 21304, "data_time": 0.00312, "decode.loss_cls": 0.748, "decode.loss_mask": 0.59513, "decode.loss_dice": 1.24992, "decode.d0.loss_cls": 1.86554, "decode.d0.loss_mask": 0.67648, "decode.d0.loss_dice": 1.49268, "decode.d1.loss_cls": 0.87248, "decode.d1.loss_mask": 0.63089, "decode.d1.loss_dice": 1.27035, "decode.d2.loss_cls": 0.79285, "decode.d2.loss_mask": 0.58675, "decode.d2.loss_dice": 1.27527, "decode.d3.loss_cls": 0.77229, "decode.d3.loss_mask": 0.51501, "decode.d3.loss_dice": 1.22801, "decode.d4.loss_cls": 0.74498, "decode.d4.loss_mask": 0.5544, "decode.d4.loss_dice": 1.23871, "decode.d5.loss_cls": 0.78084, "decode.d5.loss_mask": 0.5284, "decode.d5.loss_dice": 1.17258, "decode.d6.loss_cls": 0.9026, "decode.d6.loss_mask": 0.54686, "decode.d6.loss_dice": 1.24473, "decode.d7.loss_cls": 0.79124, "decode.d7.loss_mask": 0.531, "decode.d7.loss_dice": 1.24271, "decode.d8.loss_cls": 0.78506, "decode.d8.loss_mask": 0.56903, "decode.d8.loss_dice": 1.25085, "loss": 27.45562, "time": 2.73252}
{"mode": "train", "epoch": 1, "iter": 384, "lr": 0.0, "memory": 21304, "data_time": 0.00327, "decode.loss_cls": 0.66545, "decode.loss_mask": 0.44421, "decode.loss_dice": 1.17143, "decode.d0.loss_cls": 1.8628, "decode.d0.loss_mask": 0.65785, "decode.d0.loss_dice": 1.36197, "decode.d1.loss_cls": 0.78444, "decode.d1.loss_mask": 0.53941, "decode.d1.loss_dice": 1.25951, "decode.d2.loss_cls": 0.71576, "decode.d2.loss_mask": 0.47551, "decode.d2.loss_dice": 1.17861, "decode.d3.loss_cls": 0.69579, "decode.d3.loss_mask": 0.44153, "decode.d3.loss_dice": 1.15687, "decode.d4.loss_cls": 0.67494, "decode.d4.loss_mask": 0.44903, "decode.d4.loss_dice": 1.18159, "decode.d5.loss_cls": 0.69779, "decode.d5.loss_mask": 0.44703, "decode.d5.loss_dice": 1.14983, "decode.d6.loss_cls": 0.76586, "decode.d6.loss_mask": 0.47411, "decode.d6.loss_dice": 1.16591, "decode.d7.loss_cls": 0.6885, "decode.d7.loss_mask": 0.49581, "decode.d7.loss_dice": 1.20328, "decode.d8.loss_cls": 0.68437, "decode.d8.loss_mask": 0.46657, "decode.d8.loss_dice": 1.22706, "loss": 25.18283, "time": 2.73339}
{"mode": "train", "epoch": 1, "iter": 448, "lr": 0.0, "memory": 21304, "data_time": 0.00331, "decode.loss_cls": 0.64916, "decode.loss_mask": 0.52617, "decode.loss_dice": 1.27154, "decode.d0.loss_cls": 1.86071, "decode.d0.loss_mask": 0.62856, "decode.d0.loss_dice": 1.45467, "decode.d1.loss_cls": 0.73559, "decode.d1.loss_mask": 0.58832, "decode.d1.loss_dice": 1.29883, "decode.d2.loss_cls": 0.66034, "decode.d2.loss_mask": 0.51914, "decode.d2.loss_dice": 1.30391, "decode.d3.loss_cls": 0.67781, "decode.d3.loss_mask": 0.51271, "decode.d3.loss_dice": 1.26019, "decode.d4.loss_cls": 0.64009, "decode.d4.loss_mask": 0.48172, "decode.d4.loss_dice": 1.27069, "decode.d5.loss_cls": 0.67639, "decode.d5.loss_mask": 0.48048, "decode.d5.loss_dice": 1.25278, "decode.d6.loss_cls": 0.69985, "decode.d6.loss_mask": 0.49479, "decode.d6.loss_dice": 1.24322, "decode.d7.loss_cls": 0.66119, "decode.d7.loss_mask": 0.49404, "decode.d7.loss_dice": 1.2265, "decode.d8.loss_cls": 0.64957, "decode.d8.loss_mask": 0.52322, "decode.d8.loss_dice": 1.25432, "loss": 25.99649, "time": 2.74389}
{"mode": "train", "epoch": 1, "iter": 512, "lr": 0.0, "memory": 21304, "data_time": 0.00338, "decode.loss_cls": 0.65697, "decode.loss_mask": 0.71104, "decode.loss_dice": 1.31615, "decode.d0.loss_cls": 1.8723, "decode.d0.loss_mask": 0.75856, "decode.d0.loss_dice": 1.51665, "decode.d1.loss_cls": 0.71076, "decode.d1.loss_mask": 0.72957, "decode.d1.loss_dice": 1.37932, "decode.d2.loss_cls": 0.63829, "decode.d2.loss_mask": 0.72972, "decode.d2.loss_dice": 1.34642, "decode.d3.loss_cls": 0.65569, "decode.d3.loss_mask": 0.66561, "decode.d3.loss_dice": 1.31902, "decode.d4.loss_cls": 0.63103, "decode.d4.loss_mask": 0.6658, "decode.d4.loss_dice": 1.28952, "decode.d5.loss_cls": 0.67663, "decode.d5.loss_mask": 0.70278, "decode.d5.loss_dice": 1.32978, "decode.d6.loss_cls": 0.68596, "decode.d6.loss_mask": 0.69086, "decode.d6.loss_dice": 1.32452, "decode.d7.loss_cls": 0.66046, "decode.d7.loss_mask": 0.7087, "decode.d7.loss_dice": 1.32613, "decode.d8.loss_cls": 0.66095, "decode.d8.loss_mask": 0.70446, "decode.d8.loss_dice": 1.3329, "loss": 28.39656, "time": 2.74303}
{"mode": "train", "epoch": 1, "iter": 576, "lr": 0.0, "memory": 21304, "data_time": 0.00342, "decode.loss_cls": 0.63102, "decode.loss_mask": 0.43445, "decode.loss_dice": 1.03807, "decode.d0.loss_cls": 1.86344, "decode.d0.loss_mask": 0.60018, "decode.d0.loss_dice": 1.28273, "decode.d1.loss_cls": 0.64407, "decode.d1.loss_mask": 0.46128, "decode.d1.loss_dice": 1.08289, "decode.d2.loss_cls": 0.575, "decode.d2.loss_mask": 0.47795, "decode.d2.loss_dice": 1.06649, "decode.d3.loss_cls": 0.62117, "decode.d3.loss_mask": 0.45239, "decode.d3.loss_dice": 1.05983, "decode.d4.loss_cls": 0.59824, "decode.d4.loss_mask": 0.4563, "decode.d4.loss_dice": 1.05598, "decode.d5.loss_cls": 0.64174, "decode.d5.loss_mask": 0.44099, "decode.d5.loss_dice": 1.06516, "decode.d6.loss_cls": 0.63082, "decode.d6.loss_mask": 0.42242, "decode.d6.loss_dice": 1.07233, "decode.d7.loss_cls": 0.62257, "decode.d7.loss_mask": 0.44796, "decode.d7.loss_dice": 1.04496, "decode.d8.loss_cls": 0.63126, "decode.d8.loss_mask": 0.43672, "decode.d8.loss_dice": 1.03721, "loss": 22.89562, "time": 2.86529}
{"mode": "train", "epoch": 1, "iter": 640, "lr": 0.0, "memory": 21304, "data_time": 0.00345, "decode.loss_cls": 0.64382, "decode.loss_mask": 0.44877, "decode.loss_dice": 1.06366, "decode.d0.loss_cls": 1.86363, "decode.d0.loss_mask": 0.68398, "decode.d0.loss_dice": 1.37179, "decode.d1.loss_cls": 0.63589, "decode.d1.loss_mask": 0.53446, "decode.d1.loss_dice": 1.148, "decode.d2.loss_cls": 0.58142, "decode.d2.loss_mask": 0.51638, "decode.d2.loss_dice": 1.1108, "decode.d3.loss_cls": 0.63237, "decode.d3.loss_mask": 0.44923, "decode.d3.loss_dice": 1.08893, "decode.d4.loss_cls": 0.61319, "decode.d4.loss_mask": 0.47353, "decode.d4.loss_dice": 1.06791, "decode.d5.loss_cls": 0.6691, "decode.d5.loss_mask": 0.48307, "decode.d5.loss_dice": 1.07493, "decode.d6.loss_cls": 0.65433, "decode.d6.loss_mask": 0.48794, "decode.d6.loss_dice": 1.05725, "decode.d7.loss_cls": 0.65018, "decode.d7.loss_mask": 0.46256, "decode.d7.loss_dice": 1.08036, "decode.d8.loss_cls": 0.64689, "decode.d8.loss_mask": 0.44251, "decode.d8.loss_dice": 1.04247, "loss": 23.67931, "time": 2.93629}
{"mode": "train", "epoch": 1, "iter": 704, "lr": 0.0, "memory": 21304, "data_time": 0.00344, "decode.loss_cls": 0.66938, "decode.loss_mask": 0.49458, "decode.loss_dice": 1.11349, "decode.d0.loss_cls": 1.84842, "decode.d0.loss_mask": 0.67855, "decode.d0.loss_dice": 1.43642, "decode.d1.loss_cls": 0.62264, "decode.d1.loss_mask": 0.54572, "decode.d1.loss_dice": 1.24797, "decode.d2.loss_cls": 0.59122, "decode.d2.loss_mask": 0.50475, "decode.d2.loss_dice": 1.18418, "decode.d3.loss_cls": 0.64344, "decode.d3.loss_mask": 0.49377, "decode.d3.loss_dice": 1.14906, "decode.d4.loss_cls": 0.64529, "decode.d4.loss_mask": 0.48429, "decode.d4.loss_dice": 1.17174, "decode.d5.loss_cls": 0.68852, "decode.d5.loss_mask": 0.49063, "decode.d5.loss_dice": 1.14002, "decode.d6.loss_cls": 0.6603, "decode.d6.loss_mask": 0.4903, "decode.d6.loss_dice": 1.14239, "decode.d7.loss_cls": 0.66848, "decode.d7.loss_mask": 0.48847, "decode.d7.loss_dice": 1.16189, "decode.d8.loss_cls": 0.67731, "decode.d8.loss_mask": 0.5026, "decode.d8.loss_dice": 1.14714, "loss": 24.78297, "time": 2.88986}
{"mode": "train", "epoch": 1, "iter": 768, "lr": 0.0, "memory": 21304, "data_time": 0.00329, "decode.loss_cls": 0.60867, "decode.loss_mask": 0.3975, "decode.loss_dice": 0.95715, "decode.d0.loss_cls": 1.85282, "decode.d0.loss_mask": 0.64114, "decode.d0.loss_dice": 1.18937, "decode.d1.loss_cls": 0.5653, "decode.d1.loss_mask": 0.5014, "decode.d1.loss_dice": 1.02176, "decode.d2.loss_cls": 0.53868, "decode.d2.loss_mask": 0.50283, "decode.d2.loss_dice": 0.99535, "decode.d3.loss_cls": 0.59652, "decode.d3.loss_mask": 0.44074, "decode.d3.loss_dice": 0.98521, "decode.d4.loss_cls": 0.5866, "decode.d4.loss_mask": 0.42974, "decode.d4.loss_dice": 0.98013, "decode.d5.loss_cls": 0.62685, "decode.d5.loss_mask": 0.40201, "decode.d5.loss_dice": 0.97484, "decode.d6.loss_cls": 0.59215, "decode.d6.loss_mask": 0.41356, "decode.d6.loss_dice": 0.97076, "decode.d7.loss_cls": 0.60003, "decode.d7.loss_mask": 0.40973, "decode.d7.loss_dice": 0.94166, "decode.d8.loss_cls": 0.59924, "decode.d8.loss_mask": 0.41335, "decode.d8.loss_dice": 0.9652, "loss": 21.70031, "time": 2.74362}
{"mode": "train", "epoch": 1, "iter": 832, "lr": 0.0, "memory": 21304, "data_time": 0.00332, "decode.loss_cls": 0.59677, "decode.loss_mask": 0.36983, "decode.loss_dice": 1.03029, "decode.d0.loss_cls": 1.85665, "decode.d0.loss_mask": 0.51412, "decode.d0.loss_dice": 1.28626, "decode.d1.loss_cls": 0.55367, "decode.d1.loss_mask": 0.39686, "decode.d1.loss_dice": 1.11084, "decode.d2.loss_cls": 0.53934, "decode.d2.loss_mask": 0.3922, "decode.d2.loss_dice": 1.05311, "decode.d3.loss_cls": 0.58987, "decode.d3.loss_mask": 0.36131, "decode.d3.loss_dice": 1.05954, "decode.d4.loss_cls": 0.57219, "decode.d4.loss_mask": 0.35148, "decode.d4.loss_dice": 1.03034, "decode.d5.loss_cls": 0.62842, "decode.d5.loss_mask": 0.34712, "decode.d5.loss_dice": 1.0235, "decode.d6.loss_cls": 0.59388, "decode.d6.loss_mask": 0.36414, "decode.d6.loss_dice": 1.04379, "decode.d7.loss_cls": 0.60484, "decode.d7.loss_mask": 0.34278, "decode.d7.loss_dice": 1.00827, "decode.d8.loss_cls": 0.59988, "decode.d8.loss_mask": 0.37511, "decode.d8.loss_dice": 1.01911, "loss": 21.61552, "time": 2.74352}
{"mode": "train", "epoch": 1, "iter": 896, "lr": 0.0, "memory": 21304, "data_time": 0.00341, "decode.loss_cls": 0.5689, "decode.loss_mask": 0.35028, "decode.loss_dice": 0.99605, "decode.d0.loss_cls": 1.84407, "decode.d0.loss_mask": 0.50175, "decode.d0.loss_dice": 1.14159, "decode.d1.loss_cls": 0.52776, "decode.d1.loss_mask": 0.41061, "decode.d1.loss_dice": 1.03624, "decode.d2.loss_cls": 0.52056, "decode.d2.loss_mask": 0.36673, "decode.d2.loss_dice": 1.00256, "decode.d3.loss_cls": 0.56975, "decode.d3.loss_mask": 0.33875, "decode.d3.loss_dice": 0.99157, "decode.d4.loss_cls": 0.54217, "decode.d4.loss_mask": 0.32714, "decode.d4.loss_dice": 1.00325, "decode.d5.loss_cls": 0.60256, "decode.d5.loss_mask": 0.33662, "decode.d5.loss_dice": 1.00412, "decode.d6.loss_cls": 0.55413, "decode.d6.loss_mask": 0.33943, "decode.d6.loss_dice": 0.98042, "decode.d7.loss_cls": 0.57447, "decode.d7.loss_mask": 0.33462, "decode.d7.loss_dice": 0.99173, "decode.d8.loss_cls": 0.56802, "decode.d8.loss_mask": 0.33305, "decode.d8.loss_dice": 0.99212, "loss": 20.651, "time": 2.77993}
{"mode": "train", "epoch": 1, "iter": 960, "lr": 0.0, "memory": 21304, "data_time": 0.0034, "decode.loss_cls": 0.56828, "decode.loss_mask": 0.40055, "decode.loss_dice": 1.10747, "decode.d0.loss_cls": 1.85303, "decode.d0.loss_mask": 0.53932, "decode.d0.loss_dice": 1.30825, "decode.d1.loss_cls": 0.54578, "decode.d1.loss_mask": 0.45804, "decode.d1.loss_dice": 1.16466, "decode.d2.loss_cls": 0.52563, "decode.d2.loss_mask": 0.43815, "decode.d2.loss_dice": 1.1256, "decode.d3.loss_cls": 0.57579, "decode.d3.loss_mask": 0.38077, "decode.d3.loss_dice": 1.09758, "decode.d4.loss_cls": 0.55971, "decode.d4.loss_mask": 0.39547, "decode.d4.loss_dice": 1.13355, "decode.d5.loss_cls": 0.61051, "decode.d5.loss_mask": 0.38766, "decode.d5.loss_dice": 1.08821, "decode.d6.loss_cls": 0.56438, "decode.d6.loss_mask": 0.40382, "decode.d6.loss_dice": 1.09501, "decode.d7.loss_cls": 0.57402, "decode.d7.loss_mask": 0.39862, "decode.d7.loss_dice": 1.0929, "decode.d8.loss_cls": 0.56514, "decode.d8.loss_mask": 0.4144, "decode.d8.loss_dice": 1.10305, "loss": 22.47534, "time": 2.77515}
{"mode": "train", "epoch": 1, "iter": 1024, "lr": 0.0, "memory": 21304, "data_time": 0.00341, "decode.loss_cls": 0.52791, "decode.loss_mask": 0.55066, "decode.loss_dice": 1.03916, "decode.d0.loss_cls": 1.84635, "decode.d0.loss_mask": 0.63546, "decode.d0.loss_dice": 1.21986, "decode.d1.loss_cls": 0.53841, "decode.d1.loss_mask": 0.55019, "decode.d1.loss_dice": 1.07184, "decode.d2.loss_cls": 0.52074, "decode.d2.loss_mask": 0.53791, "decode.d2.loss_dice": 1.04799, "decode.d3.loss_cls": 0.55317, "decode.d3.loss_mask": 0.51637, "decode.d3.loss_dice": 1.0434, "decode.d4.loss_cls": 0.52713, "decode.d4.loss_mask": 0.50038, "decode.d4.loss_dice": 1.06621, "decode.d5.loss_cls": 0.55278, "decode.d5.loss_mask": 0.50912, "decode.d5.loss_dice": 1.0399, "decode.d6.loss_cls": 0.52518, "decode.d6.loss_mask": 0.54346, "decode.d6.loss_dice": 1.02321, "decode.d7.loss_cls": 0.51956, "decode.d7.loss_mask": 0.5431, "decode.d7.loss_dice": 1.03553, "decode.d8.loss_cls": 0.53025, "decode.d8.loss_mask": 0.56898, "decode.d8.loss_dice": 1.02801, "loss": 22.71225, "time": 2.74546}
{"mode": "train", "epoch": 1, "iter": 1088, "lr": 0.0, "memory": 21304, "data_time": 0.00331, "decode.loss_cls": 0.50261, "decode.loss_mask": 0.4673, "decode.loss_dice": 0.90386, "decode.d0.loss_cls": 1.84826, "decode.d0.loss_mask": 0.56283, "decode.d0.loss_dice": 1.11522, "decode.d1.loss_cls": 0.53173, "decode.d1.loss_mask": 0.45691, "decode.d1.loss_dice": 0.99027, "decode.d2.loss_cls": 0.51303, "decode.d2.loss_mask": 0.49515, "decode.d2.loss_dice": 0.93558, "decode.d3.loss_cls": 0.53515, "decode.d3.loss_mask": 0.46266, "decode.d3.loss_dice": 0.93097, "decode.d4.loss_cls": 0.5061, "decode.d4.loss_mask": 0.4614, "decode.d4.loss_dice": 0.91963, "decode.d5.loss_cls": 0.53619, "decode.d5.loss_mask": 0.47111, "decode.d5.loss_dice": 0.92819, "decode.d6.loss_cls": 0.49284, "decode.d6.loss_mask": 0.46699, "decode.d6.loss_dice": 0.91566, "decode.d7.loss_cls": 0.50086, "decode.d7.loss_mask": 0.44187, "decode.d7.loss_dice": 0.90983, "decode.d8.loss_cls": 0.50007, "decode.d8.loss_mask": 0.47754, "decode.d8.loss_dice": 0.91478, "loss": 20.69457, "time": 2.7396}
{"mode": "train", "epoch": 1, "iter": 1152, "lr": 0.0, "memory": 21304, "data_time": 0.00335, "decode.loss_cls": 0.48701, "decode.loss_mask": 0.45969, "decode.loss_dice": 1.04983, "decode.d0.loss_cls": 1.85468, "decode.d0.loss_mask": 0.60429, "decode.d0.loss_dice": 1.20136, "decode.d1.loss_cls": 0.5301, "decode.d1.loss_mask": 0.5083, "decode.d1.loss_dice": 1.06891, "decode.d2.loss_cls": 0.50202, "decode.d2.loss_mask": 0.4801, "decode.d2.loss_dice": 1.07558, "decode.d3.loss_cls": 0.53077, "decode.d3.loss_mask": 0.44264, "decode.d3.loss_dice": 1.06037, "decode.d4.loss_cls": 0.48255, "decode.d4.loss_mask": 0.46165, "decode.d4.loss_dice": 1.03079, "decode.d5.loss_cls": 0.52612, "decode.d5.loss_mask": 0.45012, "decode.d5.loss_dice": 0.99421, "decode.d6.loss_cls": 0.48871, "decode.d6.loss_mask": 0.46255, "decode.d6.loss_dice": 1.02711, "decode.d7.loss_cls": 0.47621, "decode.d7.loss_mask": 0.46029, "decode.d7.loss_dice": 1.01678, "decode.d8.loss_cls": 0.49309, "decode.d8.loss_mask": 0.45366, "decode.d8.loss_dice": 1.00443, "loss": 21.68392, "time": 2.74958}
{"mode": "train", "epoch": 1, "iter": 1216, "lr": 0.0, "memory": 21304, "data_time": 0.00325, "decode.loss_cls": 0.41295, "decode.loss_mask": 0.36042, "decode.loss_dice": 0.74012, "decode.d0.loss_cls": 1.83548, "decode.d0.loss_mask": 0.45691, "decode.d0.loss_dice": 0.88778, "decode.d1.loss_cls": 0.47943, "decode.d1.loss_mask": 0.42503, "decode.d1.loss_dice": 0.81226, "decode.d2.loss_cls": 0.44895, "decode.d2.loss_mask": 0.39603, "decode.d2.loss_dice": 0.79162, "decode.d3.loss_cls": 0.47644, "decode.d3.loss_mask": 0.38092, "decode.d3.loss_dice": 0.77421, "decode.d4.loss_cls": 0.42528, "decode.d4.loss_mask": 0.38146, "decode.d4.loss_dice": 0.79193, "decode.d5.loss_cls": 0.46467, "decode.d5.loss_mask": 0.36604, "decode.d5.loss_dice": 0.76896, "decode.d6.loss_cls": 0.42355, "decode.d6.loss_mask": 0.40326, "decode.d6.loss_dice": 0.77238, "decode.d7.loss_cls": 0.41147, "decode.d7.loss_mask": 0.39364, "decode.d7.loss_dice": 0.74772, "decode.d8.loss_cls": 0.4243, "decode.d8.loss_mask": 0.37056, "decode.d8.loss_dice": 0.76153, "loss": 17.58529, "time": 2.74118}
{"mode": "train", "epoch": 1, "iter": 1280, "lr": 0.0, "memory": 21304, "data_time": 0.00329, "decode.loss_cls": 0.40518, "decode.loss_mask": 0.31515, "decode.loss_dice": 0.76184, "decode.d0.loss_cls": 1.8376, "decode.d0.loss_mask": 0.39878, "decode.d0.loss_dice": 0.9203, "decode.d1.loss_cls": 0.48697, "decode.d1.loss_mask": 0.33783, "decode.d1.loss_dice": 0.77247, "decode.d2.loss_cls": 0.45655, "decode.d2.loss_mask": 0.29988, "decode.d2.loss_dice": 0.80117, "decode.d3.loss_cls": 0.46979, "decode.d3.loss_mask": 0.30052, "decode.d3.loss_dice": 0.77882, "decode.d4.loss_cls": 0.42051, "decode.d4.loss_mask": 0.32635, "decode.d4.loss_dice": 0.76592, "decode.d5.loss_cls": 0.43504, "decode.d5.loss_mask": 0.30581, "decode.d5.loss_dice": 0.75372, "decode.d6.loss_cls": 0.40292, "decode.d6.loss_mask": 0.36402, "decode.d6.loss_dice": 0.75681, "decode.d7.loss_cls": 0.39844, "decode.d7.loss_mask": 0.33721, "decode.d7.loss_dice": 0.74959, "decode.d8.loss_cls": 0.40559, "decode.d8.loss_mask": 0.31052, "decode.d8.loss_dice": 0.7581, "loss": 16.83341, "time": 2.73453}
{"mode": "train", "epoch": 1, "iter": 1344, "lr": 0.0, "memory": 21304, "data_time": 0.00326, "decode.loss_cls": 0.38725, "decode.loss_mask": 0.39656, "decode.loss_dice": 0.72904, "decode.d0.loss_cls": 1.83107, "decode.d0.loss_mask": 0.49072, "decode.d0.loss_dice": 0.90871, "decode.d1.loss_cls": 0.47174, "decode.d1.loss_mask": 0.43546, "decode.d1.loss_dice": 0.73245, "decode.d2.loss_cls": 0.43071, "decode.d2.loss_mask": 0.38127, "decode.d2.loss_dice": 0.75718, "decode.d3.loss_cls": 0.45884, "decode.d3.loss_mask": 0.40773, "decode.d3.loss_dice": 0.72363, "decode.d4.loss_cls": 0.41628, "decode.d4.loss_mask": 0.40376, "decode.d4.loss_dice": 0.7021, "decode.d5.loss_cls": 0.43329, "decode.d5.loss_mask": 0.3818, "decode.d5.loss_dice": 0.73506, "decode.d6.loss_cls": 0.40201, "decode.d6.loss_mask": 0.39828, "decode.d6.loss_dice": 0.69444, "decode.d7.loss_cls": 0.40235, "decode.d7.loss_mask": 0.39098, "decode.d7.loss_dice": 0.69268, "decode.d8.loss_cls": 0.40821, "decode.d8.loss_mask": 0.39672, "decode.d8.loss_dice": 0.72195, "loss": 17.12229, "time": 2.73225}
{"mode": "train", "epoch": 1, "iter": 1408, "lr": 0.0, "memory": 21304, "data_time": 0.00327, "decode.loss_cls": 0.36702, "decode.loss_mask": 0.39354, "decode.loss_dice": 0.86572, "decode.d0.loss_cls": 1.82722, "decode.d0.loss_mask": 0.43213, "decode.d0.loss_dice": 0.99191, "decode.d1.loss_cls": 0.4642, "decode.d1.loss_mask": 0.36287, "decode.d1.loss_dice": 0.85657, "decode.d2.loss_cls": 0.4285, "decode.d2.loss_mask": 0.35511, "decode.d2.loss_dice": 0.85064, "decode.d3.loss_cls": 0.45443, "decode.d3.loss_mask": 0.35783, "decode.d3.loss_dice": 0.80865, "decode.d4.loss_cls": 0.41097, "decode.d4.loss_mask": 0.37004, "decode.d4.loss_dice": 0.82925, "decode.d5.loss_cls": 0.40614, "decode.d5.loss_mask": 0.34987, "decode.d5.loss_dice": 0.83272, "decode.d6.loss_cls": 0.37861, "decode.d6.loss_mask": 0.37182, "decode.d6.loss_dice": 0.82972, "decode.d7.loss_cls": 0.37658, "decode.d7.loss_mask": 0.38525, "decode.d7.loss_dice": 0.83385, "decode.d8.loss_cls": 0.38067, "decode.d8.loss_mask": 0.40057, "decode.d8.loss_dice": 0.82486, "loss": 17.79729, "time": 2.72844}
{"mode": "train", "epoch": 1, "iter": 1472, "lr": 0.0, "memory": 21304, "data_time": 0.00319, "decode.loss_cls": 0.32879, "decode.loss_mask": 0.3303, "decode.loss_dice": 0.7287, "decode.d0.loss_cls": 1.823, "decode.d0.loss_mask": 0.39921, "decode.d0.loss_dice": 0.89284, "decode.d1.loss_cls": 0.43708, "decode.d1.loss_mask": 0.35908, "decode.d1.loss_dice": 0.72623, "decode.d2.loss_cls": 0.40893, "decode.d2.loss_mask": 0.34352, "decode.d2.loss_dice": 0.74045, "decode.d3.loss_cls": 0.41663, "decode.d3.loss_mask": 0.33944, "decode.d3.loss_dice": 0.70462, "decode.d4.loss_cls": 0.37648, "decode.d4.loss_mask": 0.34221, "decode.d4.loss_dice": 0.72482, "decode.d5.loss_cls": 0.37623, "decode.d5.loss_mask": 0.34779, "decode.d5.loss_dice": 0.7226, "decode.d6.loss_cls": 0.35056, "decode.d6.loss_mask": 0.34529, "decode.d6.loss_dice": 0.66544, "decode.d7.loss_cls": 0.347, "decode.d7.loss_mask": 0.33289, "decode.d7.loss_dice": 0.7107, "decode.d8.loss_cls": 0.35105, "decode.d8.loss_mask": 0.3365, "decode.d8.loss_dice": 0.68993, "loss": 15.99831, "time": 2.72855}
{"mode": "train", "epoch": 1, "iter": 1536, "lr": 0.0, "memory": 21304, "data_time": 0.00314, "decode.loss_cls": 0.31233, "decode.loss_mask": 0.33131, "decode.loss_dice": 0.79958, "decode.d0.loss_cls": 1.82435, "decode.d0.loss_mask": 0.38241, "decode.d0.loss_dice": 0.95319, "decode.d1.loss_cls": 0.44023, "decode.d1.loss_mask": 0.33602, "decode.d1.loss_dice": 0.80861, "decode.d2.loss_cls": 0.39793, "decode.d2.loss_mask": 0.32087, "decode.d2.loss_dice": 0.79588, "decode.d3.loss_cls": 0.41125, "decode.d3.loss_mask": 0.3311, "decode.d3.loss_dice": 0.77974, "decode.d4.loss_cls": 0.36991, "decode.d4.loss_mask": 0.3528, "decode.d4.loss_dice": 0.80684, "decode.d5.loss_cls": 0.36783, "decode.d5.loss_mask": 0.33522, "decode.d5.loss_dice": 0.78296, "decode.d6.loss_cls": 0.33835, "decode.d6.loss_mask": 0.32632, "decode.d6.loss_dice": 0.79715, "decode.d7.loss_cls": 0.33705, "decode.d7.loss_mask": 0.32965, "decode.d7.loss_dice": 0.78897, "decode.d8.loss_cls": 0.34484, "decode.d8.loss_mask": 0.3481, "decode.d8.loss_dice": 0.77981, "loss": 16.6306, "time": 2.72763}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.0, "memory": 21304, "data_time": 0.00319, "decode.loss_cls": 0.31673, "decode.loss_mask": 0.45256, "decode.loss_dice": 0.7958, "decode.d0.loss_cls": 1.82592, "decode.d0.loss_mask": 0.50669, "decode.d0.loss_dice": 0.98149, "decode.d1.loss_cls": 0.46709, "decode.d1.loss_mask": 0.42938, "decode.d1.loss_dice": 0.81778, "decode.d2.loss_cls": 0.41826, "decode.d2.loss_mask": 0.42755, "decode.d2.loss_dice": 0.80182, "decode.d3.loss_cls": 0.41868, "decode.d3.loss_mask": 0.42653, "decode.d3.loss_dice": 0.80786, "decode.d4.loss_cls": 0.37234, "decode.d4.loss_mask": 0.4515, "decode.d4.loss_dice": 0.79016, "decode.d5.loss_cls": 0.35899, "decode.d5.loss_mask": 0.45448, "decode.d5.loss_dice": 0.80564, "decode.d6.loss_cls": 0.33129, "decode.d6.loss_mask": 0.48375, "decode.d6.loss_dice": 0.79519, "decode.d7.loss_cls": 0.34915, "decode.d7.loss_mask": 0.44841, "decode.d7.loss_dice": 0.79874, "decode.d8.loss_cls": 0.35467, "decode.d8.loss_mask": 0.44848, "decode.d8.loss_dice": 0.76808, "loss": 17.90501, "time": 2.72787}
{"mode": "train", "epoch": 1, "iter": 1664, "lr": 0.0, "memory": 21304, "data_time": 0.0033, "decode.loss_cls": 0.3129, "decode.loss_mask": 0.38942, "decode.loss_dice": 0.86974, "decode.d0.loss_cls": 1.82618, "decode.d0.loss_mask": 0.4876, "decode.d0.loss_dice": 1.04949, "decode.d1.loss_cls": 0.44631, "decode.d1.loss_mask": 0.45616, "decode.d1.loss_dice": 0.88102, "decode.d2.loss_cls": 0.41623, "decode.d2.loss_mask": 0.40207, "decode.d2.loss_dice": 0.87675, "decode.d3.loss_cls": 0.40616, "decode.d3.loss_mask": 0.41475, "decode.d3.loss_dice": 0.88071, "decode.d4.loss_cls": 0.36054, "decode.d4.loss_mask": 0.40351, "decode.d4.loss_dice": 0.87511, "decode.d5.loss_cls": 0.3609, "decode.d5.loss_mask": 0.40297, "decode.d5.loss_dice": 0.84063, "decode.d6.loss_cls": 0.32869, "decode.d6.loss_mask": 0.40797, "decode.d6.loss_dice": 0.85654, "decode.d7.loss_cls": 0.33791, "decode.d7.loss_mask": 0.39402, "decode.d7.loss_dice": 0.84565, "decode.d8.loss_cls": 0.34869, "decode.d8.loss_mask": 0.39137, "decode.d8.loss_dice": 0.84971, "loss": 18.11971, "time": 2.72787}
{"mode": "train", "epoch": 1, "iter": 1728, "lr": 0.0, "memory": 21304, "data_time": 0.00323, "decode.loss_cls": 0.28803, "decode.loss_mask": 0.34523, "decode.loss_dice": 0.84446, "decode.d0.loss_cls": 1.81836, "decode.d0.loss_mask": 0.36814, "decode.d0.loss_dice": 0.95471, "decode.d1.loss_cls": 0.43566, "decode.d1.loss_mask": 0.36245, "decode.d1.loss_dice": 0.85365, "decode.d2.loss_cls": 0.39623, "decode.d2.loss_mask": 0.35619, "decode.d2.loss_dice": 0.83956, "decode.d3.loss_cls": 0.37944, "decode.d3.loss_mask": 0.37499, "decode.d3.loss_dice": 0.83919, "decode.d4.loss_cls": 0.33999, "decode.d4.loss_mask": 0.3476, "decode.d4.loss_dice": 0.8459, "decode.d5.loss_cls": 0.31693, "decode.d5.loss_mask": 0.36536, "decode.d5.loss_dice": 0.81513, "decode.d6.loss_cls": 0.2954, "decode.d6.loss_mask": 0.35257, "decode.d6.loss_dice": 0.83196, "decode.d7.loss_cls": 0.30892, "decode.d7.loss_mask": 0.35197, "decode.d7.loss_dice": 0.82231, "decode.d8.loss_cls": 0.31741, "decode.d8.loss_mask": 0.34374, "decode.d8.loss_dice": 0.82438, "loss": 16.93587, "time": 2.72779}
{"mode": "train", "epoch": 1, "iter": 1792, "lr": 0.0, "memory": 21304, "data_time": 0.00319, "decode.loss_cls": 0.23641, "decode.loss_mask": 0.3878, "decode.loss_dice": 0.80441, "decode.d0.loss_cls": 1.82143, "decode.d0.loss_mask": 0.42316, "decode.d0.loss_dice": 0.90316, "decode.d1.loss_cls": 0.40253, "decode.d1.loss_mask": 0.41899, "decode.d1.loss_dice": 0.78623, "decode.d2.loss_cls": 0.35482, "decode.d2.loss_mask": 0.38176, "decode.d2.loss_dice": 0.76328, "decode.d3.loss_cls": 0.33285, "decode.d3.loss_mask": 0.38098, "decode.d3.loss_dice": 0.75145, "decode.d4.loss_cls": 0.28921, "decode.d4.loss_mask": 0.37735, "decode.d4.loss_dice": 0.79166, "decode.d5.loss_cls": 0.28393, "decode.d5.loss_mask": 0.36942, "decode.d5.loss_dice": 0.76455, "decode.d6.loss_cls": 0.26414, "decode.d6.loss_mask": 0.3492, "decode.d6.loss_dice": 0.74606, "decode.d7.loss_cls": 0.27363, "decode.d7.loss_mask": 0.34012, "decode.d7.loss_dice": 0.73959, "decode.d8.loss_cls": 0.28041, "decode.d8.loss_mask": 0.34576, "decode.d8.loss_dice": 0.74434, "loss": 16.10864, "time": 2.72768}
{"mode": "train", "epoch": 1, "iter": 1856, "lr": 0.0, "memory": 21304, "data_time": 0.00323, "decode.loss_cls": 0.23333, "decode.loss_mask": 0.28406, "decode.loss_dice": 0.85853, "decode.d0.loss_cls": 1.81586, "decode.d0.loss_mask": 0.33626, "decode.d0.loss_dice": 1.00383, "decode.d1.loss_cls": 0.42203, "decode.d1.loss_mask": 0.30494, "decode.d1.loss_dice": 0.8334, "decode.d2.loss_cls": 0.36401, "decode.d2.loss_mask": 0.30039, "decode.d2.loss_dice": 0.8336, "decode.d3.loss_cls": 0.34674, "decode.d3.loss_mask": 0.27548, "decode.d3.loss_dice": 0.81112, "decode.d4.loss_cls": 0.29487, "decode.d4.loss_mask": 0.29903, "decode.d4.loss_dice": 0.85887, "decode.d5.loss_cls": 0.28314, "decode.d5.loss_mask": 0.28412, "decode.d5.loss_dice": 0.79018, "decode.d6.loss_cls": 0.26965, "decode.d6.loss_mask": 0.27235, "decode.d6.loss_dice": 0.83569, "decode.d7.loss_cls": 0.27096, "decode.d7.loss_mask": 0.27748, "decode.d7.loss_dice": 0.83416, "decode.d8.loss_cls": 0.27691, "decode.d8.loss_mask": 0.27326, "decode.d8.loss_dice": 0.82712, "loss": 15.97139, "time": 2.72784}
{"mode": "train", "epoch": 1, "iter": 1920, "lr": 0.0, "memory": 21304, "data_time": 0.0032, "decode.loss_cls": 0.21734, "decode.loss_mask": 0.38879, "decode.loss_dice": 0.92761, "decode.d0.loss_cls": 1.8178, "decode.d0.loss_mask": 0.42004, "decode.d0.loss_dice": 1.0857, "decode.d1.loss_cls": 0.39325, "decode.d1.loss_mask": 0.3908, "decode.d1.loss_dice": 0.96751, "decode.d2.loss_cls": 0.34791, "decode.d2.loss_mask": 0.39228, "decode.d2.loss_dice": 0.91076, "decode.d3.loss_cls": 0.32995, "decode.d3.loss_mask": 0.38212, "decode.d3.loss_dice": 0.92812, "decode.d4.loss_cls": 0.25087, "decode.d4.loss_mask": 0.40417, "decode.d4.loss_dice": 0.9197, "decode.d5.loss_cls": 0.25674, "decode.d5.loss_mask": 0.38793, "decode.d5.loss_dice": 0.97137, "decode.d6.loss_cls": 0.24102, "decode.d6.loss_mask": 0.37943, "decode.d6.loss_dice": 0.92714, "decode.d7.loss_cls": 0.24258, "decode.d7.loss_mask": 0.37737, "decode.d7.loss_dice": 0.93225, "decode.d8.loss_cls": 0.25916, "decode.d8.loss_mask": 0.38815, "decode.d8.loss_dice": 0.9268, "loss": 17.76466, "time": 2.7285}
{"mode": "train", "epoch": 1, "iter": 1984, "lr": 0.0, "memory": 21304, "data_time": 0.00318, "decode.loss_cls": 0.19207, "decode.loss_mask": 0.41334, "decode.loss_dice": 0.851, "decode.d0.loss_cls": 1.80522, "decode.d0.loss_mask": 0.44692, "decode.d0.loss_dice": 0.97604, "decode.d1.loss_cls": 0.37129, "decode.d1.loss_mask": 0.37792, "decode.d1.loss_dice": 0.87308, "decode.d2.loss_cls": 0.31555, "decode.d2.loss_mask": 0.39147, "decode.d2.loss_dice": 0.82794, "decode.d3.loss_cls": 0.29047, "decode.d3.loss_mask": 0.41683, "decode.d3.loss_dice": 0.84625, "decode.d4.loss_cls": 0.23457, "decode.d4.loss_mask": 0.42133, "decode.d4.loss_dice": 0.87023, "decode.d5.loss_cls": 0.2241, "decode.d5.loss_mask": 0.41379, "decode.d5.loss_dice": 0.84636, "decode.d6.loss_cls": 0.2142, "decode.d6.loss_mask": 0.41349, "decode.d6.loss_dice": 0.87183, "decode.d7.loss_cls": 0.21126, "decode.d7.loss_mask": 0.42349, "decode.d7.loss_dice": 0.83702, "decode.d8.loss_cls": 0.22346, "decode.d8.loss_mask": 0.41825, "decode.d8.loss_dice": 0.82596, "loss": 16.84475, "time": 2.73501}
{"mode": "train", "epoch": 1, "iter": 2048, "lr": 0.0, "memory": 21304, "data_time": 0.00343, "decode.loss_cls": 0.16327, "decode.loss_mask": 0.37842, "decode.loss_dice": 0.84059, "decode.d0.loss_cls": 1.80816, "decode.d0.loss_mask": 0.41177, "decode.d0.loss_dice": 0.90393, "decode.d1.loss_cls": 0.3547, "decode.d1.loss_mask": 0.38928, "decode.d1.loss_dice": 0.84372, "decode.d2.loss_cls": 0.3123, "decode.d2.loss_mask": 0.36256, "decode.d2.loss_dice": 0.82342, "decode.d3.loss_cls": 0.27775, "decode.d3.loss_mask": 0.35558, "decode.d3.loss_dice": 0.83417, "decode.d4.loss_cls": 0.20915, "decode.d4.loss_mask": 0.35764, "decode.d4.loss_dice": 0.82765, "decode.d5.loss_cls": 0.20837, "decode.d5.loss_mask": 0.37863, "decode.d5.loss_dice": 0.85666, "decode.d6.loss_cls": 0.18726, "decode.d6.loss_mask": 0.37479, "decode.d6.loss_dice": 0.8426, "decode.d7.loss_cls": 0.19436, "decode.d7.loss_mask": 0.35988, "decode.d7.loss_dice": 0.82636, "decode.d8.loss_cls": 0.20996, "decode.d8.loss_mask": 0.34954, "decode.d8.loss_dice": 0.83932, "loss": 16.08178, "time": 2.82355}
{"mode": "train", "epoch": 1, "iter": 2112, "lr": 0.0, "memory": 21304, "data_time": 0.00361, "decode.loss_cls": 0.16558, "decode.loss_mask": 0.37138, "decode.loss_dice": 0.78784, "decode.d0.loss_cls": 1.8086, "decode.d0.loss_mask": 0.39947, "decode.d0.loss_dice": 0.85477, "decode.d1.loss_cls": 0.36096, "decode.d1.loss_mask": 0.38042, "decode.d1.loss_dice": 0.79401, "decode.d2.loss_cls": 0.30219, "decode.d2.loss_mask": 0.34592, "decode.d2.loss_dice": 0.75403, "decode.d3.loss_cls": 0.26593, "decode.d3.loss_mask": 0.36255, "decode.d3.loss_dice": 0.78151, "decode.d4.loss_cls": 0.20698, "decode.d4.loss_mask": 0.35816, "decode.d4.loss_dice": 0.77543, "decode.d5.loss_cls": 0.19308, "decode.d5.loss_mask": 0.35823, "decode.d5.loss_dice": 0.77172, "decode.d6.loss_cls": 0.18198, "decode.d6.loss_mask": 0.36975, "decode.d6.loss_dice": 0.79482, "decode.d7.loss_cls": 0.18807, "decode.d7.loss_mask": 0.3751, "decode.d7.loss_dice": 0.80109, "decode.d8.loss_cls": 0.19524, "decode.d8.loss_mask": 0.37916, "decode.d8.loss_dice": 0.78915, "loss": 15.47312, "time": 2.92922}
{"mode": "train", "epoch": 1, "iter": 2176, "lr": 0.0, "memory": 21304, "data_time": 0.0035, "decode.loss_cls": 0.17909, "decode.loss_mask": 0.36068, "decode.loss_dice": 0.95872, "decode.d0.loss_cls": 1.80593, "decode.d0.loss_mask": 0.38149, "decode.d0.loss_dice": 1.08307, "decode.d1.loss_cls": 0.39015, "decode.d1.loss_mask": 0.37063, "decode.d1.loss_dice": 0.94506, "decode.d2.loss_cls": 0.32569, "decode.d2.loss_mask": 0.36366, "decode.d2.loss_dice": 0.97791, "decode.d3.loss_cls": 0.2856, "decode.d3.loss_mask": 0.33712, "decode.d3.loss_dice": 0.95513, "decode.d4.loss_cls": 0.23002, "decode.d4.loss_mask": 0.35402, "decode.d4.loss_dice": 0.99108, "decode.d5.loss_cls": 0.21483, "decode.d5.loss_mask": 0.34705, "decode.d5.loss_dice": 1.02872, "decode.d6.loss_cls": 0.20545, "decode.d6.loss_mask": 0.36614, "decode.d6.loss_dice": 0.94332, "decode.d7.loss_cls": 0.2165, "decode.d7.loss_mask": 0.36112, "decode.d7.loss_dice": 0.95264, "decode.d8.loss_cls": 0.21403, "decode.d8.loss_mask": 0.3533, "decode.d8.loss_dice": 0.97284, "loss": 17.47101, "time": 2.75736}
{"mode": "train", "epoch": 1, "iter": 2240, "lr": 0.0, "memory": 21304, "data_time": 0.00347, "decode.loss_cls": 0.15391, "decode.loss_mask": 0.44579, "decode.loss_dice": 0.95965, "decode.d0.loss_cls": 1.80401, "decode.d0.loss_mask": 0.43875, "decode.d0.loss_dice": 1.02359, "decode.d1.loss_cls": 0.35291, "decode.d1.loss_mask": 0.43153, "decode.d1.loss_dice": 0.92095, "decode.d2.loss_cls": 0.29925, "decode.d2.loss_mask": 0.42579, "decode.d2.loss_dice": 0.94818, "decode.d3.loss_cls": 0.25534, "decode.d3.loss_mask": 0.4262, "decode.d3.loss_dice": 0.9392, "decode.d4.loss_cls": 0.19014, "decode.d4.loss_mask": 0.44401, "decode.d4.loss_dice": 0.96133, "decode.d5.loss_cls": 0.1901, "decode.d5.loss_mask": 0.44254, "decode.d5.loss_dice": 0.94625, "decode.d6.loss_cls": 0.16245, "decode.d6.loss_mask": 0.45482, "decode.d6.loss_dice": 0.96857, "decode.d7.loss_cls": 0.17781, "decode.d7.loss_mask": 0.44256, "decode.d7.loss_dice": 0.94822, "decode.d8.loss_cls": 0.17293, "decode.d8.loss_mask": 0.44825, "decode.d8.loss_dice": 0.94073, "loss": 17.71576, "time": 2.75718}
{"mode": "train", "epoch": 1, "iter": 2304, "lr": 0.0, "memory": 21304, "data_time": 0.00338, "decode.loss_cls": 0.14765, "decode.loss_mask": 0.34989, "decode.loss_dice": 0.88601, "decode.d0.loss_cls": 1.80028, "decode.d0.loss_mask": 0.35404, "decode.d0.loss_dice": 0.96617, "decode.d1.loss_cls": 0.32769, "decode.d1.loss_mask": 0.34869, "decode.d1.loss_dice": 0.89267, "decode.d2.loss_cls": 0.27834, "decode.d2.loss_mask": 0.3419, "decode.d2.loss_dice": 0.88915, "decode.d3.loss_cls": 0.22616, "decode.d3.loss_mask": 0.34294, "decode.d3.loss_dice": 0.90583, "decode.d4.loss_cls": 0.18183, "decode.d4.loss_mask": 0.34156, "decode.d4.loss_dice": 0.89044, "decode.d5.loss_cls": 0.17996, "decode.d5.loss_mask": 0.32008, "decode.d5.loss_dice": 0.90049, "decode.d6.loss_cls": 0.1619, "decode.d6.loss_mask": 0.327, "decode.d6.loss_dice": 0.87434, "decode.d7.loss_cls": 0.16615, "decode.d7.loss_mask": 0.33853, "decode.d7.loss_dice": 0.90064, "decode.d8.loss_cls": 0.18045, "decode.d8.loss_mask": 0.34041, "decode.d8.loss_dice": 0.88139, "loss": 16.04256, "time": 2.75864}
{"mode": "train", "epoch": 1, "iter": 2368, "lr": 0.0, "memory": 21304, "data_time": 0.00351, "decode.loss_cls": 0.12906, "decode.loss_mask": 0.40438, "decode.loss_dice": 0.84633, "decode.d0.loss_cls": 1.80835, "decode.d0.loss_mask": 0.4133, "decode.d0.loss_dice": 0.91357, "decode.d1.loss_cls": 0.33184, "decode.d1.loss_mask": 0.33328, "decode.d1.loss_dice": 0.81839, "decode.d2.loss_cls": 0.26028, "decode.d2.loss_mask": 0.3752, "decode.d2.loss_dice": 0.83601, "decode.d3.loss_cls": 0.22048, "decode.d3.loss_mask": 0.36972, "decode.d3.loss_dice": 0.8218, "decode.d4.loss_cls": 0.16679, "decode.d4.loss_mask": 0.36509, "decode.d4.loss_dice": 0.8371, "decode.d5.loss_cls": 0.15584, "decode.d5.loss_mask": 0.37727, "decode.d5.loss_dice": 0.86679, "decode.d6.loss_cls": 0.13304, "decode.d6.loss_mask": 0.397, "decode.d6.loss_dice": 0.85661, "decode.d7.loss_cls": 0.146, "decode.d7.loss_mask": 0.37283, "decode.d7.loss_dice": 0.87396, "decode.d8.loss_cls": 0.1533, "decode.d8.loss_mask": 0.37324, "decode.d8.loss_dice": 0.84388, "loss": 15.80073, "time": 2.76641}
{"mode": "train", "epoch": 1, "iter": 2432, "lr": 0.0, "memory": 21304, "data_time": 0.00339, "decode.loss_cls": 0.10032, "decode.loss_mask": 0.35605, "decode.loss_dice": 0.69141, "decode.d0.loss_cls": 1.80879, "decode.d0.loss_mask": 0.39416, "decode.d0.loss_dice": 0.74984, "decode.d1.loss_cls": 0.28818, "decode.d1.loss_mask": 0.3657, "decode.d1.loss_dice": 0.69426, "decode.d2.loss_cls": 0.22571, "decode.d2.loss_mask": 0.34653, "decode.d2.loss_dice": 0.69104, "decode.d3.loss_cls": 0.1871, "decode.d3.loss_mask": 0.32903, "decode.d3.loss_dice": 0.70443, "decode.d4.loss_cls": 0.13552, "decode.d4.loss_mask": 0.34503, "decode.d4.loss_dice": 0.72386, "decode.d5.loss_cls": 0.13047, "decode.d5.loss_mask": 0.34398, "decode.d5.loss_dice": 0.70748, "decode.d6.loss_cls": 0.11617, "decode.d6.loss_mask": 0.34176, "decode.d6.loss_dice": 0.69944, "decode.d7.loss_cls": 0.11296, "decode.d7.loss_mask": 0.3454, "decode.d7.loss_dice": 0.71255, "decode.d8.loss_cls": 0.11698, "decode.d8.loss_mask": 0.35299, "decode.d8.loss_dice": 0.70041, "loss": 13.81753, "time": 2.74489}
{"mode": "train", "epoch": 1, "iter": 2496, "lr": 0.0, "memory": 21304, "data_time": 0.0034, "decode.loss_cls": 0.13769, "decode.loss_mask": 0.32287, "decode.loss_dice": 0.87443, "decode.d0.loss_cls": 1.80498, "decode.d0.loss_mask": 0.36966, "decode.d0.loss_dice": 0.92265, "decode.d1.loss_cls": 0.32172, "decode.d1.loss_mask": 0.33541, "decode.d1.loss_dice": 0.84184, "decode.d2.loss_cls": 0.27158, "decode.d2.loss_mask": 0.31466, "decode.d2.loss_dice": 0.8247, "decode.d3.loss_cls": 0.21319, "decode.d3.loss_mask": 0.32962, "decode.d3.loss_dice": 0.86076, "decode.d4.loss_cls": 0.16639, "decode.d4.loss_mask": 0.32722, "decode.d4.loss_dice": 0.84682, "decode.d5.loss_cls": 0.15695, "decode.d5.loss_mask": 0.3256, "decode.d5.loss_dice": 0.84038, "decode.d6.loss_cls": 0.14775, "decode.d6.loss_mask": 0.33104, "decode.d6.loss_dice": 0.85187, "decode.d7.loss_cls": 0.14699, "decode.d7.loss_mask": 0.32329, "decode.d7.loss_dice": 0.84141, "decode.d8.loss_cls": 0.15478, "decode.d8.loss_mask": 0.3277, "decode.d8.loss_dice": 0.83189, "loss": 15.36581, "time": 2.74485}
{"mode": "train", "epoch": 1, "iter": 2560, "lr": 0.0, "memory": 21304, "data_time": 0.00347, "decode.loss_cls": 0.13609, "decode.loss_mask": 0.35775, "decode.loss_dice": 0.94109, "decode.d0.loss_cls": 1.79868, "decode.d0.loss_mask": 0.38291, "decode.d0.loss_dice": 0.95985, "decode.d1.loss_cls": 0.28744, "decode.d1.loss_mask": 0.36739, "decode.d1.loss_dice": 0.93103, "decode.d2.loss_cls": 0.24225, "decode.d2.loss_mask": 0.36027, "decode.d2.loss_dice": 0.91135, "decode.d3.loss_cls": 0.20285, "decode.d3.loss_mask": 0.35541, "decode.d3.loss_dice": 0.92603, "decode.d4.loss_cls": 0.14557, "decode.d4.loss_mask": 0.34976, "decode.d4.loss_dice": 0.95333, "decode.d5.loss_cls": 0.14082, "decode.d5.loss_mask": 0.37239, "decode.d5.loss_dice": 0.92582, "decode.d6.loss_cls": 0.14006, "decode.d6.loss_mask": 0.35389, "decode.d6.loss_dice": 0.93048, "decode.d7.loss_cls": 0.13415, "decode.d7.loss_mask": 0.35496, "decode.d7.loss_dice": 0.9408, "decode.d8.loss_cls": 0.14419, "decode.d8.loss_mask": 0.35283, "decode.d8.loss_dice": 0.93284, "loss": 16.33228, "time": 2.74437}
{"mode": "train", "epoch": 1, "iter": 2624, "lr": 0.0, "memory": 21304, "data_time": 0.00345, "decode.loss_cls": 0.10834, "decode.loss_mask": 0.38324, "decode.loss_dice": 0.91832, "decode.d0.loss_cls": 1.79457, "decode.d0.loss_mask": 0.37604, "decode.d0.loss_dice": 0.98064, "decode.d1.loss_cls": 0.30711, "decode.d1.loss_mask": 0.3463, "decode.d1.loss_dice": 0.89303, "decode.d2.loss_cls": 0.2272, "decode.d2.loss_mask": 0.36082, "decode.d2.loss_dice": 0.87082, "decode.d3.loss_cls": 0.1837, "decode.d3.loss_mask": 0.34636, "decode.d3.loss_dice": 0.93362, "decode.d4.loss_cls": 0.13746, "decode.d4.loss_mask": 0.37432, "decode.d4.loss_dice": 0.9212, "decode.d5.loss_cls": 0.12663, "decode.d5.loss_mask": 0.41648, "decode.d5.loss_dice": 0.92155, "decode.d6.loss_cls": 0.12205, "decode.d6.loss_mask": 0.37673, "decode.d6.loss_dice": 0.88427, "decode.d7.loss_cls": 0.10956, "decode.d7.loss_mask": 0.39473, "decode.d7.loss_dice": 0.91645, "decode.d8.loss_cls": 0.12249, "decode.d8.loss_mask": 0.38735, "decode.d8.loss_dice": 0.9429, "loss": 16.18427, "time": 2.75483}
{"mode": "train", "epoch": 1, "iter": 2688, "lr": 0.0, "memory": 21304, "data_time": 0.00325, "decode.loss_cls": 0.11631, "decode.loss_mask": 0.32853, "decode.loss_dice": 0.86373, "decode.d0.loss_cls": 1.80046, "decode.d0.loss_mask": 0.36269, "decode.d0.loss_dice": 0.92809, "decode.d1.loss_cls": 0.26821, "decode.d1.loss_mask": 0.33538, "decode.d1.loss_dice": 0.88272, "decode.d2.loss_cls": 0.22752, "decode.d2.loss_mask": 0.33098, "decode.d2.loss_dice": 0.82732, "decode.d3.loss_cls": 0.17808, "decode.d3.loss_mask": 0.34895, "decode.d3.loss_dice": 0.84757, "decode.d4.loss_cls": 0.13783, "decode.d4.loss_mask": 0.33956, "decode.d4.loss_dice": 0.8487, "decode.d5.loss_cls": 0.12869, "decode.d5.loss_mask": 0.34584, "decode.d5.loss_dice": 0.8801, "decode.d6.loss_cls": 0.12433, "decode.d6.loss_mask": 0.32529, "decode.d6.loss_dice": 0.84847, "decode.d7.loss_cls": 0.12668, "decode.d7.loss_mask": 0.32986, "decode.d7.loss_dice": 0.84728, "decode.d8.loss_cls": 0.13313, "decode.d8.loss_mask": 0.33344, "decode.d8.loss_dice": 0.84757, "loss": 15.24332, "time": 2.72777}
{"mode": "train", "epoch": 1, "iter": 2752, "lr": 0.0, "memory": 21304, "data_time": 0.00334, "decode.loss_cls": 0.07684, "decode.loss_mask": 0.37283, "decode.loss_dice": 0.8255, "decode.d0.loss_cls": 1.79763, "decode.d0.loss_mask": 0.38387, "decode.d0.loss_dice": 0.86033, "decode.d1.loss_cls": 0.26177, "decode.d1.loss_mask": 0.37186, "decode.d1.loss_dice": 0.86337, "decode.d2.loss_cls": 0.20223, "decode.d2.loss_mask": 0.38812, "decode.d2.loss_dice": 0.84357, "decode.d3.loss_cls": 0.15145, "decode.d3.loss_mask": 0.37182, "decode.d3.loss_dice": 0.82932, "decode.d4.loss_cls": 0.10839, "decode.d4.loss_mask": 0.38303, "decode.d4.loss_dice": 0.86123, "decode.d5.loss_cls": 0.09803, "decode.d5.loss_mask": 0.38013, "decode.d5.loss_dice": 0.84013, "decode.d6.loss_cls": 0.091, "decode.d6.loss_mask": 0.37152, "decode.d6.loss_dice": 0.80606, "decode.d7.loss_cls": 0.09153, "decode.d7.loss_mask": 0.38151, "decode.d7.loss_dice": 0.84086, "decode.d8.loss_cls": 0.09301, "decode.d8.loss_mask": 0.3712, "decode.d8.loss_dice": 0.82059, "loss": 15.13872, "time": 2.72896}
{"mode": "train", "epoch": 1, "iter": 2816, "lr": 0.0, "memory": 21304, "data_time": 0.00343, "decode.loss_cls": 0.07259, "decode.loss_mask": 0.28987, "decode.loss_dice": 0.77771, "decode.d0.loss_cls": 1.79795, "decode.d0.loss_mask": 0.29792, "decode.d0.loss_dice": 0.80203, "decode.d1.loss_cls": 0.25093, "decode.d1.loss_mask": 0.28716, "decode.d1.loss_dice": 0.75855, "decode.d2.loss_cls": 0.18057, "decode.d2.loss_mask": 0.28751, "decode.d2.loss_dice": 0.75128, "decode.d3.loss_cls": 0.14674, "decode.d3.loss_mask": 0.29442, "decode.d3.loss_dice": 0.77231, "decode.d4.loss_cls": 0.09706, "decode.d4.loss_mask": 0.29888, "decode.d4.loss_dice": 0.7858, "decode.d5.loss_cls": 0.09318, "decode.d5.loss_mask": 0.30441, "decode.d5.loss_dice": 0.76043, "decode.d6.loss_cls": 0.08031, "decode.d6.loss_mask": 0.29538, "decode.d6.loss_dice": 0.79102, "decode.d7.loss_cls": 0.08595, "decode.d7.loss_mask": 0.29313, "decode.d7.loss_dice": 0.77853, "decode.d8.loss_cls": 0.07976, "decode.d8.loss_mask": 0.28062, "decode.d8.loss_dice": 0.77744, "loss": 13.56945, "time": 2.76288}
{"mode": "train", "epoch": 1, "iter": 2880, "lr": 0.0, "memory": 21304, "data_time": 0.00349, "decode.loss_cls": 0.09562, "decode.loss_mask": 0.40295, "decode.loss_dice": 0.89836, "decode.d0.loss_cls": 1.79811, "decode.d0.loss_mask": 0.39967, "decode.d0.loss_dice": 0.95352, "decode.d1.loss_cls": 0.26832, "decode.d1.loss_mask": 0.3861, "decode.d1.loss_dice": 0.91751, "decode.d2.loss_cls": 0.19744, "decode.d2.loss_mask": 0.40122, "decode.d2.loss_dice": 0.93175, "decode.d3.loss_cls": 0.15774, "decode.d3.loss_mask": 0.39744, "decode.d3.loss_dice": 0.92456, "decode.d4.loss_cls": 0.12273, "decode.d4.loss_mask": 0.39664, "decode.d4.loss_dice": 0.93966, "decode.d5.loss_cls": 0.1175, "decode.d5.loss_mask": 0.39649, "decode.d5.loss_dice": 0.90626, "decode.d6.loss_cls": 0.09521, "decode.d6.loss_mask": 0.40169, "decode.d6.loss_dice": 0.93452, "decode.d7.loss_cls": 0.09587, "decode.d7.loss_mask": 0.39891, "decode.d7.loss_dice": 0.95098, "decode.d8.loss_cls": 0.10673, "decode.d8.loss_mask": 0.40198, "decode.d8.loss_dice": 0.93839, "loss": 16.33384, "time": 2.76979}
{"mode": "train", "epoch": 1, "iter": 2944, "lr": 0.0, "memory": 21304, "data_time": 0.00349, "decode.loss_cls": 0.0533, "decode.loss_mask": 0.39514, "decode.loss_dice": 0.68811, "decode.d0.loss_cls": 1.79724, "decode.d0.loss_mask": 0.427, "decode.d0.loss_dice": 0.71428, "decode.d1.loss_cls": 0.20017, "decode.d1.loss_mask": 0.4447, "decode.d1.loss_dice": 0.72516, "decode.d2.loss_cls": 0.14804, "decode.d2.loss_mask": 0.40419, "decode.d2.loss_dice": 0.68803, "decode.d3.loss_cls": 0.10984, "decode.d3.loss_mask": 0.39283, "decode.d3.loss_dice": 0.68986, "decode.d4.loss_cls": 0.07333, "decode.d4.loss_mask": 0.3937, "decode.d4.loss_dice": 0.69884, "decode.d5.loss_cls": 0.07056, "decode.d5.loss_mask": 0.39172, "decode.d5.loss_dice": 0.69161, "decode.d6.loss_cls": 0.06467, "decode.d6.loss_mask": 0.39451, "decode.d6.loss_dice": 0.69329, "decode.d7.loss_cls": 0.0608, "decode.d7.loss_mask": 0.39027, "decode.d7.loss_dice": 0.69061, "decode.d8.loss_cls": 0.0663, "decode.d8.loss_mask": 0.3913, "decode.d8.loss_dice": 0.68415, "loss": 13.63357, "time": 2.81992}
{"mode": "train", "epoch": 1, "iter": 3008, "lr": 0.0, "memory": 21304, "data_time": 0.00357, "decode.loss_cls": 0.09918, "decode.loss_mask": 0.27751, "decode.loss_dice": 0.84351, "decode.d0.loss_cls": 1.79432, "decode.d0.loss_mask": 0.33315, "decode.d0.loss_dice": 0.93178, "decode.d1.loss_cls": 0.24022, "decode.d1.loss_mask": 0.31169, "decode.d1.loss_dice": 0.85179, "decode.d2.loss_cls": 0.19615, "decode.d2.loss_mask": 0.29492, "decode.d2.loss_dice": 0.83908, "decode.d3.loss_cls": 0.14686, "decode.d3.loss_mask": 0.28636, "decode.d3.loss_dice": 0.82311, "decode.d4.loss_cls": 0.11243, "decode.d4.loss_mask": 0.27988, "decode.d4.loss_dice": 0.86803, "decode.d5.loss_cls": 0.12578, "decode.d5.loss_mask": 0.28086, "decode.d5.loss_dice": 0.84326, "decode.d6.loss_cls": 0.0997, "decode.d6.loss_mask": 0.27944, "decode.d6.loss_dice": 0.84817, "decode.d7.loss_cls": 0.10842, "decode.d7.loss_mask": 0.27505, "decode.d7.loss_dice": 0.82161, "decode.d8.loss_cls": 0.10046, "decode.d8.loss_mask": 0.27841, "decode.d8.loss_dice": 0.84275, "loss": 14.43389, "time": 2.80131}
{"mode": "train", "epoch": 1, "iter": 3072, "lr": 0.0, "memory": 21304, "data_time": 0.00349, "decode.loss_cls": 0.08991, "decode.loss_mask": 0.30966, "decode.loss_dice": 1.03788, "decode.d0.loss_cls": 1.79032, "decode.d0.loss_mask": 0.32579, "decode.d0.loss_dice": 1.07424, "decode.d1.loss_cls": 0.25151, "decode.d1.loss_mask": 0.31278, "decode.d1.loss_dice": 1.05804, "decode.d2.loss_cls": 0.20576, "decode.d2.loss_mask": 0.30205, "decode.d2.loss_dice": 1.00275, "decode.d3.loss_cls": 0.15702, "decode.d3.loss_mask": 0.2993, "decode.d3.loss_dice": 1.03938, "decode.d4.loss_cls": 0.10303, "decode.d4.loss_mask": 0.30408, "decode.d4.loss_dice": 1.04588, "decode.d5.loss_cls": 0.1079, "decode.d5.loss_mask": 0.30794, "decode.d5.loss_dice": 1.03837, "decode.d6.loss_cls": 0.10755, "decode.d6.loss_mask": 0.29275, "decode.d6.loss_dice": 1.02179, "decode.d7.loss_cls": 0.10092, "decode.d7.loss_mask": 0.30428, "decode.d7.loss_dice": 1.02462, "decode.d8.loss_cls": 0.10839, "decode.d8.loss_mask": 0.29988, "decode.d8.loss_dice": 1.02992, "loss": 16.45372, "time": 2.74736}
{"mode": "train", "epoch": 1, "iter": 3136, "lr": 0.0, "memory": 21304, "data_time": 0.00355, "decode.loss_cls": 0.06019, "decode.loss_mask": 0.34763, "decode.loss_dice": 0.69176, "decode.d0.loss_cls": 1.80395, "decode.d0.loss_mask": 0.35321, "decode.d0.loss_dice": 0.72987, "decode.d1.loss_cls": 0.22218, "decode.d1.loss_mask": 0.32623, "decode.d1.loss_dice": 0.70991, "decode.d2.loss_cls": 0.16287, "decode.d2.loss_mask": 0.33258, "decode.d2.loss_dice": 0.69009, "decode.d3.loss_cls": 0.11823, "decode.d3.loss_mask": 0.33808, "decode.d3.loss_dice": 0.69731, "decode.d4.loss_cls": 0.07884, "decode.d4.loss_mask": 0.34345, "decode.d4.loss_dice": 0.72061, "decode.d5.loss_cls": 0.08461, "decode.d5.loss_mask": 0.34812, "decode.d5.loss_dice": 0.69915, "decode.d6.loss_cls": 0.06546, "decode.d6.loss_mask": 0.34462, "decode.d6.loss_dice": 0.70725, "decode.d7.loss_cls": 0.06532, "decode.d7.loss_mask": 0.34561, "decode.d7.loss_dice": 0.71529, "decode.d8.loss_cls": 0.06482, "decode.d8.loss_mask": 0.34537, "decode.d8.loss_dice": 0.71589, "loss": 13.22849, "time": 2.76694}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 0.0, "memory": 21304, "data_time": 0.0036, "decode.loss_cls": 0.06934, "decode.loss_mask": 0.34172, "decode.loss_dice": 0.79883, "decode.d0.loss_cls": 1.79419, "decode.d0.loss_mask": 0.35748, "decode.d0.loss_dice": 0.8551, "decode.d1.loss_cls": 0.22702, "decode.d1.loss_mask": 0.33287, "decode.d1.loss_dice": 0.81667, "decode.d2.loss_cls": 0.16234, "decode.d2.loss_mask": 0.32439, "decode.d2.loss_dice": 0.8128, "decode.d3.loss_cls": 0.12382, "decode.d3.loss_mask": 0.31715, "decode.d3.loss_dice": 0.79287, "decode.d4.loss_cls": 0.09339, "decode.d4.loss_mask": 0.33468, "decode.d4.loss_dice": 0.79361, "decode.d5.loss_cls": 0.09486, "decode.d5.loss_mask": 0.31734, "decode.d5.loss_dice": 0.80092, "decode.d6.loss_cls": 0.07337, "decode.d6.loss_mask": 0.33433, "decode.d6.loss_dice": 0.79628, "decode.d7.loss_cls": 0.07564, "decode.d7.loss_mask": 0.33332, "decode.d7.loss_dice": 0.80767, "decode.d8.loss_cls": 0.08095, "decode.d8.loss_mask": 0.34027, "decode.d8.loss_dice": 0.80254, "loss": 14.20576, "time": 2.78611}
{"mode": "train", "epoch": 1, "iter": 3264, "lr": 0.0, "memory": 21304, "data_time": 0.00341, "decode.loss_cls": 0.09799, "decode.loss_mask": 0.38168, "decode.loss_dice": 0.72598, "decode.d0.loss_cls": 1.80686, "decode.d0.loss_mask": 0.39397, "decode.d0.loss_dice": 0.75456, "decode.d1.loss_cls": 0.22871, "decode.d1.loss_mask": 0.34746, "decode.d1.loss_dice": 0.74856, "decode.d2.loss_cls": 0.17887, "decode.d2.loss_mask": 0.36717, "decode.d2.loss_dice": 0.72892, "decode.d3.loss_cls": 0.13442, "decode.d3.loss_mask": 0.36876, "decode.d3.loss_dice": 0.72223, "decode.d4.loss_cls": 0.11008, "decode.d4.loss_mask": 0.36617, "decode.d4.loss_dice": 0.74778, "decode.d5.loss_cls": 0.10184, "decode.d5.loss_mask": 0.36619, "decode.d5.loss_dice": 0.74952, "decode.d6.loss_cls": 0.08987, "decode.d6.loss_mask": 0.39057, "decode.d6.loss_dice": 0.73331, "decode.d7.loss_cls": 0.10421, "decode.d7.loss_mask": 0.3689, "decode.d7.loss_dice": 0.71646, "decode.d8.loss_cls": 0.10634, "decode.d8.loss_mask": 0.38175, "decode.d8.loss_dice": 0.711, "loss": 14.03011, "time": 2.7583}
{"mode": "train", "epoch": 1, "iter": 3328, "lr": 0.0, "memory": 21304, "data_time": 0.00342, "decode.loss_cls": 0.08389, "decode.loss_mask": 0.34278, "decode.loss_dice": 0.80624, "decode.d0.loss_cls": 1.78987, "decode.d0.loss_mask": 0.34499, "decode.d0.loss_dice": 0.86797, "decode.d1.loss_cls": 0.23614, "decode.d1.loss_mask": 0.3089, "decode.d1.loss_dice": 0.84769, "decode.d2.loss_cls": 0.16608, "decode.d2.loss_mask": 0.35583, "decode.d2.loss_dice": 0.85428, "decode.d3.loss_cls": 0.12545, "decode.d3.loss_mask": 0.3526, "decode.d3.loss_dice": 0.80207, "decode.d4.loss_cls": 0.0984, "decode.d4.loss_mask": 0.33416, "decode.d4.loss_dice": 0.81748, "decode.d5.loss_cls": 0.10311, "decode.d5.loss_mask": 0.32908, "decode.d5.loss_dice": 0.79964, "decode.d6.loss_cls": 0.09376, "decode.d6.loss_mask": 0.33191, "decode.d6.loss_dice": 0.80433, "decode.d7.loss_cls": 0.09505, "decode.d7.loss_mask": 0.33774, "decode.d7.loss_dice": 0.80406, "decode.d8.loss_cls": 0.08732, "decode.d8.loss_mask": 0.34182, "decode.d8.loss_dice": 0.80914, "loss": 14.47178, "time": 2.74674}
{"mode": "train", "epoch": 1, "iter": 3392, "lr": 0.0, "memory": 21304, "data_time": 0.00345, "decode.loss_cls": 0.0718, "decode.loss_mask": 0.36382, "decode.loss_dice": 0.90987, "decode.d0.loss_cls": 1.79298, "decode.d0.loss_mask": 0.43803, "decode.d0.loss_dice": 0.98388, "decode.d1.loss_cls": 0.20981, "decode.d1.loss_mask": 0.39429, "decode.d1.loss_dice": 0.91747, "decode.d2.loss_cls": 0.15204, "decode.d2.loss_mask": 0.38342, "decode.d2.loss_dice": 0.91759, "decode.d3.loss_cls": 0.11452, "decode.d3.loss_mask": 0.38391, "decode.d3.loss_dice": 0.92425, "decode.d4.loss_cls": 0.08703, "decode.d4.loss_mask": 0.36943, "decode.d4.loss_dice": 0.92832, "decode.d5.loss_cls": 0.08305, "decode.d5.loss_mask": 0.37326, "decode.d5.loss_dice": 0.92073, "decode.d6.loss_cls": 0.07606, "decode.d6.loss_mask": 0.37908, "decode.d6.loss_dice": 0.91939, "decode.d7.loss_cls": 0.07433, "decode.d7.loss_mask": 0.36909, "decode.d7.loss_dice": 0.90757, "decode.d8.loss_cls": 0.0803, "decode.d8.loss_mask": 0.36813, "decode.d8.loss_dice": 0.90495, "loss": 15.79839, "time": 2.75588}
{"mode": "train", "epoch": 1, "iter": 3456, "lr": 0.0, "memory": 21304, "data_time": 0.00355, "decode.loss_cls": 0.07216, "decode.loss_mask": 0.30886, "decode.loss_dice": 0.78474, "decode.d0.loss_cls": 1.78939, "decode.d0.loss_mask": 0.34327, "decode.d0.loss_dice": 0.83844, "decode.d1.loss_cls": 0.20166, "decode.d1.loss_mask": 0.32083, "decode.d1.loss_dice": 0.85084, "decode.d2.loss_cls": 0.15017, "decode.d2.loss_mask": 0.3124, "decode.d2.loss_dice": 0.81827, "decode.d3.loss_cls": 0.1257, "decode.d3.loss_mask": 0.30369, "decode.d3.loss_dice": 0.80883, "decode.d4.loss_cls": 0.082, "decode.d4.loss_mask": 0.30344, "decode.d4.loss_dice": 0.80312, "decode.d5.loss_cls": 0.08876, "decode.d5.loss_mask": 0.29681, "decode.d5.loss_dice": 0.79859, "decode.d6.loss_cls": 0.07165, "decode.d6.loss_mask": 0.30993, "decode.d6.loss_dice": 0.80084, "decode.d7.loss_cls": 0.08052, "decode.d7.loss_mask": 0.29802, "decode.d7.loss_dice": 0.81236, "decode.d8.loss_cls": 0.09383, "decode.d8.loss_mask": 0.29157, "decode.d8.loss_dice": 0.77743, "loss": 13.93812, "time": 2.7995}
{"mode": "train", "epoch": 1, "iter": 3520, "lr": 0.0, "memory": 21304, "data_time": 0.00356, "decode.loss_cls": 0.06862, "decode.loss_mask": 0.33171, "decode.loss_dice": 0.9573, "decode.d0.loss_cls": 1.79851, "decode.d0.loss_mask": 0.35, "decode.d0.loss_dice": 0.98263, "decode.d1.loss_cls": 0.20926, "decode.d1.loss_mask": 0.32362, "decode.d1.loss_dice": 0.97603, "decode.d2.loss_cls": 0.15821, "decode.d2.loss_mask": 0.32236, "decode.d2.loss_dice": 0.94801, "decode.d3.loss_cls": 0.11639, "decode.d3.loss_mask": 0.32949, "decode.d3.loss_dice": 0.95031, "decode.d4.loss_cls": 0.09312, "decode.d4.loss_mask": 0.3311, "decode.d4.loss_dice": 0.92785, "decode.d5.loss_cls": 0.08913, "decode.d5.loss_mask": 0.33564, "decode.d5.loss_dice": 0.94389, "decode.d6.loss_cls": 0.07827, "decode.d6.loss_mask": 0.3364, "decode.d6.loss_dice": 0.96228, "decode.d7.loss_cls": 0.07746, "decode.d7.loss_mask": 0.30461, "decode.d7.loss_dice": 0.95319, "decode.d8.loss_cls": 0.08612, "decode.d8.loss_mask": 0.3303, "decode.d8.loss_dice": 0.93223, "loss": 15.60405, "time": 2.81909}
{"mode": "train", "epoch": 1, "iter": 3584, "lr": 0.0, "memory": 21304, "data_time": 0.00342, "decode.loss_cls": 0.07413, "decode.loss_mask": 0.26366, "decode.loss_dice": 0.58254, "decode.d0.loss_cls": 1.79222, "decode.d0.loss_mask": 0.30374, "decode.d0.loss_dice": 0.66854, "decode.d1.loss_cls": 0.19266, "decode.d1.loss_mask": 0.27588, "decode.d1.loss_dice": 0.63813, "decode.d2.loss_cls": 0.14795, "decode.d2.loss_mask": 0.27423, "decode.d2.loss_dice": 0.62302, "decode.d3.loss_cls": 0.11251, "decode.d3.loss_mask": 0.26965, "decode.d3.loss_dice": 0.6124, "decode.d4.loss_cls": 0.08645, "decode.d4.loss_mask": 0.25897, "decode.d4.loss_dice": 0.5878, "decode.d5.loss_cls": 0.08375, "decode.d5.loss_mask": 0.25412, "decode.d5.loss_dice": 0.58725, "decode.d6.loss_cls": 0.07722, "decode.d6.loss_mask": 0.25982, "decode.d6.loss_dice": 0.61047, "decode.d7.loss_cls": 0.06892, "decode.d7.loss_mask": 0.25938, "decode.d7.loss_dice": 0.62067, "decode.d8.loss_cls": 0.07387, "decode.d8.loss_mask": 0.26018, "decode.d8.loss_dice": 0.61585, "loss": 11.53595, "time": 2.74574}
{"mode": "train", "epoch": 1, "iter": 3648, "lr": 0.0, "memory": 21304, "data_time": 0.0034, "decode.loss_cls": 0.08249, "decode.loss_mask": 0.34417, "decode.loss_dice": 0.92823, "decode.d0.loss_cls": 1.79043, "decode.d0.loss_mask": 0.335, "decode.d0.loss_dice": 0.94855, "decode.d1.loss_cls": 0.20643, "decode.d1.loss_mask": 0.34061, "decode.d1.loss_dice": 0.8945, "decode.d2.loss_cls": 0.15944, "decode.d2.loss_mask": 0.35539, "decode.d2.loss_dice": 0.91704, "decode.d3.loss_cls": 0.10934, "decode.d3.loss_mask": 0.34548, "decode.d3.loss_dice": 0.93489, "decode.d4.loss_cls": 0.07555, "decode.d4.loss_mask": 0.33704, "decode.d4.loss_dice": 0.90367, "decode.d5.loss_cls": 0.07847, "decode.d5.loss_mask": 0.34349, "decode.d5.loss_dice": 0.94261, "decode.d6.loss_cls": 0.07975, "decode.d6.loss_mask": 0.34559, "decode.d6.loss_dice": 0.90105, "decode.d7.loss_cls": 0.08291, "decode.d7.loss_mask": 0.34543, "decode.d7.loss_dice": 0.92239, "decode.d8.loss_cls": 0.0784, "decode.d8.loss_mask": 0.34849, "decode.d8.loss_dice": 0.92222, "loss": 15.39906, "time": 2.73397}
{"mode": "train", "epoch": 1, "iter": 3712, "lr": 0.0, "memory": 21304, "data_time": 0.00347, "decode.loss_cls": 0.06999, "decode.loss_mask": 0.30195, "decode.loss_dice": 0.86667, "decode.d0.loss_cls": 1.79436, "decode.d0.loss_mask": 0.32256, "decode.d0.loss_dice": 0.86404, "decode.d1.loss_cls": 0.18864, "decode.d1.loss_mask": 0.31037, "decode.d1.loss_dice": 0.89739, "decode.d2.loss_cls": 0.14933, "decode.d2.loss_mask": 0.32436, "decode.d2.loss_dice": 0.85606, "decode.d3.loss_cls": 0.10617, "decode.d3.loss_mask": 0.33575, "decode.d3.loss_dice": 0.86942, "decode.d4.loss_cls": 0.07643, "decode.d4.loss_mask": 0.32717, "decode.d4.loss_dice": 0.8761, "decode.d5.loss_cls": 0.07423, "decode.d5.loss_mask": 0.33007, "decode.d5.loss_dice": 0.86423, "decode.d6.loss_cls": 0.07862, "decode.d6.loss_mask": 0.30993, "decode.d6.loss_dice": 0.86168, "decode.d7.loss_cls": 0.07949, "decode.d7.loss_mask": 0.30833, "decode.d7.loss_dice": 0.87216, "decode.d8.loss_cls": 0.0762, "decode.d8.loss_mask": 0.30807, "decode.d8.loss_dice": 0.87133, "loss": 14.57114, "time": 2.76933}
{"mode": "train", "epoch": 1, "iter": 3776, "lr": 0.0, "memory": 21304, "data_time": 0.00353, "decode.loss_cls": 0.07247, "decode.loss_mask": 0.37166, "decode.loss_dice": 0.85275, "decode.d0.loss_cls": 1.7906, "decode.d0.loss_mask": 0.39467, "decode.d0.loss_dice": 0.86656, "decode.d1.loss_cls": 0.20056, "decode.d1.loss_mask": 0.37014, "decode.d1.loss_dice": 0.84323, "decode.d2.loss_cls": 0.15483, "decode.d2.loss_mask": 0.366, "decode.d2.loss_dice": 0.85432, "decode.d3.loss_cls": 0.10502, "decode.d3.loss_mask": 0.38949, "decode.d3.loss_dice": 0.85891, "decode.d4.loss_cls": 0.07829, "decode.d4.loss_mask": 0.3733, "decode.d4.loss_dice": 0.86228, "decode.d5.loss_cls": 0.08128, "decode.d5.loss_mask": 0.38014, "decode.d5.loss_dice": 0.86831, "decode.d6.loss_cls": 0.08656, "decode.d6.loss_mask": 0.3749, "decode.d6.loss_dice": 0.84003, "decode.d7.loss_cls": 0.07474, "decode.d7.loss_mask": 0.379, "decode.d7.loss_dice": 0.85181, "decode.d8.loss_cls": 0.08662, "decode.d8.loss_mask": 0.37031, "decode.d8.loss_dice": 0.83529, "loss": 15.03409, "time": 2.86549}
{"mode": "train", "epoch": 1, "iter": 3840, "lr": 0.0, "memory": 21304, "data_time": 0.00357, "decode.loss_cls": 0.07861, "decode.loss_mask": 0.32405, "decode.loss_dice": 0.82755, "decode.d0.loss_cls": 1.79271, "decode.d0.loss_mask": 0.33856, "decode.d0.loss_dice": 0.85693, "decode.d1.loss_cls": 0.22283, "decode.d1.loss_mask": 0.32062, "decode.d1.loss_dice": 0.80533, "decode.d2.loss_cls": 0.1612, "decode.d2.loss_mask": 0.31326, "decode.d2.loss_dice": 0.83177, "decode.d3.loss_cls": 0.11949, "decode.d3.loss_mask": 0.33401, "decode.d3.loss_dice": 0.83835, "decode.d4.loss_cls": 0.08951, "decode.d4.loss_mask": 0.34235, "decode.d4.loss_dice": 0.85942, "decode.d5.loss_cls": 0.09236, "decode.d5.loss_mask": 0.32326, "decode.d5.loss_dice": 0.82899, "decode.d6.loss_cls": 0.0854, "decode.d6.loss_mask": 0.3201, "decode.d6.loss_dice": 0.79233, "decode.d7.loss_cls": 0.08306, "decode.d7.loss_mask": 0.32075, "decode.d7.loss_dice": 0.81359, "decode.d8.loss_cls": 0.0767, "decode.d8.loss_mask": 0.32869, "decode.d8.loss_dice": 0.84239, "loss": 14.36416, "time": 2.82365}
{"mode": "train", "epoch": 1, "iter": 3904, "lr": 0.0, "memory": 21304, "data_time": 0.00351, "decode.loss_cls": 0.06264, "decode.loss_mask": 0.33126, "decode.loss_dice": 0.83363, "decode.d0.loss_cls": 1.79267, "decode.d0.loss_mask": 0.35605, "decode.d0.loss_dice": 0.87777, "decode.d1.loss_cls": 0.1922, "decode.d1.loss_mask": 0.34672, "decode.d1.loss_dice": 0.83856, "decode.d2.loss_cls": 0.15252, "decode.d2.loss_mask": 0.31355, "decode.d2.loss_dice": 0.83331, "decode.d3.loss_cls": 0.1074, "decode.d3.loss_mask": 0.32662, "decode.d3.loss_dice": 0.81424, "decode.d4.loss_cls": 0.06997, "decode.d4.loss_mask": 0.34549, "decode.d4.loss_dice": 0.84855, "decode.d5.loss_cls": 0.0789, "decode.d5.loss_mask": 0.31742, "decode.d5.loss_dice": 0.82813, "decode.d6.loss_cls": 0.07988, "decode.d6.loss_mask": 0.31407, "decode.d6.loss_dice": 0.83037, "decode.d7.loss_cls": 0.07589, "decode.d7.loss_mask": 0.32014, "decode.d7.loss_dice": 0.80411, "decode.d8.loss_cls": 0.08196, "decode.d8.loss_mask": 0.31106, "decode.d8.loss_dice": 0.83692, "loss": 14.322, "time": 2.79587}
{"mode": "train", "epoch": 1, "iter": 3968, "lr": 0.0, "memory": 21304, "data_time": 0.00341, "decode.loss_cls": 0.07887, "decode.loss_mask": 0.38495, "decode.loss_dice": 0.91668, "decode.d0.loss_cls": 1.78751, "decode.d0.loss_mask": 0.39999, "decode.d0.loss_dice": 0.95405, "decode.d1.loss_cls": 0.21142, "decode.d1.loss_mask": 0.38717, "decode.d1.loss_dice": 0.9339, "decode.d2.loss_cls": 0.16487, "decode.d2.loss_mask": 0.37055, "decode.d2.loss_dice": 0.9125, "decode.d3.loss_cls": 0.13163, "decode.d3.loss_mask": 0.37191, "decode.d3.loss_dice": 0.90578, "decode.d4.loss_cls": 0.09851, "decode.d4.loss_mask": 0.38106, "decode.d4.loss_dice": 0.91056, "decode.d5.loss_cls": 0.09475, "decode.d5.loss_mask": 0.37567, "decode.d5.loss_dice": 0.91482, "decode.d6.loss_cls": 0.09529, "decode.d6.loss_mask": 0.37288, "decode.d6.loss_dice": 0.91194, "decode.d7.loss_cls": 0.09024, "decode.d7.loss_mask": 0.37818, "decode.d7.loss_dice": 0.91826, "decode.d8.loss_cls": 0.08925, "decode.d8.loss_mask": 0.37586, "decode.d8.loss_dice": 0.93058, "loss": 15.84962, "time": 2.7529}
{"mode": "val", "epoch": 1, "iter": 48, "lr": 0.0, "aAcc": 0.9974, "mIoU": 0.5546, "mAcc": 0.6697, "IoU.background": 0.9974, "IoU.crack": 0.1118, "Acc.background": 0.998, "Acc.crack": 0.3414}
